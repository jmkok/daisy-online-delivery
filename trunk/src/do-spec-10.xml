<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="../util/docbook/rng/docbookxi.rng" type="xml"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xml:base="." version="5.0">

    <title>DAISY Online Delivery Specification</title>
    <subtitle>A Web Service API for online access to DAISY and other multimedia content</subtitle>

    <info>
        <releaseinfo>Unpublished working draft</releaseinfo>
        <pubdate>7 july 2009</pubdate>
        <!--
        <editor>
            <personname>Kenny Johar</personname>
            <affiliation>
                <orgname>Vision Australia</orgname>
            </affiliation>
            <email>kenny.johar@visionaustralia.org</email>
        </editor>
        <editor>
            <personname>Markus Gylling</personname>
            <affiliation>
                <orgname>DAISY Consortium</orgname>
            </affiliation>
            <email>mgylling@daisy.org</email>
        </editor>
        -->
    </info>

    <preface xml:id="introduction" conformance="informative">
        <title>Introduction</title>
        <para>
            <remark role="todo">TODO describe overview target application domains and functionality
                scope. Mention that although focused on the DAISY DTB content type, the protocol per
                se is not limited to DAISY</remark>
        </para>


        <!-- 
    <section>
    <title>Usage scenarios</title>
    <section xml:id="usage_menuless" conformance="informative">
    <title>The Menuless Usage Scenario</title>
    <para>A menuless Service or Reading System is one that does not
    provide menu functionality; in these systems, content must be selected
    through some out-of-band mechanism.  In this scenario, a DAISY Online
    Service's main role is to inform a Reading System what content is
    available to the User.
    </para>
    <para>If a menuless Reading System connects to a Service, then the Service
    should provide a menuless service model.  If a Reading System connects
    to a menuless Service, then the Reading System should operate in menuless mode.
    </para>
    <itemizedlist>
    <title>Menuless Service Model Examples</title>
    <listitem>
    <para>The Service could provide a separate interface for content selection.
    This could be a Web site, a call centre or some other method.
    </para>
    </listitem>
    <listitem> -->
        <!-- This is sometimes called a profile system; however, "profile"
    is confusing as it can mean a number of things, so I avoided that term.
    -GGT -->
        <!--
            <para>Content could be automatically selected for a User by the Service
                based on their preferences.  The Service would periodically update
                the content available.</para>
                </listitem>
            <listitem>
                <para>The Service could provide periodicals.  Each time the
                    User connects to the Service, the most recent editions are available
                    to them.</para>
            </listitem>
            </itemizedlist>
            <para>After a Reading System queries the Service for the list of
                available content, it could continue in a noninteractive mode, or could
                allow user interaction with the content.
                A noninteractive Reading System will synchronize its content
                with that available on the Service.  It will download those content items it
                does not already haveâ€”up to its storage capacity.
                An interactive Reading System will allow the User to choose what
                content to download or stream.
            </para>
            <para>This specification provides a mechanism for Services to request the
                removal of content from Reading Systems.  This is for use only with content
                on loan from the Service, for which the loan has expired, and may aid with
                syncronization issues.
                <emphasis>Use of this mechanism to remove content without the User's consent is
                    strongly discouraged.</emphasis></para>
        </section>
        <section xml:id="introduction_readingSystemTypes_interactive" conformance="informative">
        <title>The Interactive Reading System</title>
        <remark role="todo">TODO describe principles of a reading system using dynamic menus</remark>                
        </section>     
-->

    </preface>

    <chapter xml:id="keywords" conformance="normative">
        <title>Keywords</title>
        <para>The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
            "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described
            in <xref linkend="bib_RFC2119"/>.</para>
    </chapter>

    <chapter xml:id="terminology" conformance="normative">
        <title>Terminology</title>
        <variablelist>
            <varlistentry xml:id="term_readingSystem">
                <term>Reading System</term>
                <listitem>
                    <para> A combination of hardware and/or software that accesses a <xref
                            linkend="term_service"/> and renders <xref linkend="term_content"/> to
                        the <xref linkend="term_user"/>. A reading system may be implemented
                        entirely on one device, or it may be split among several. Corresponds to a
                        consumer in the <xref linkend="bib_wsibasicprofile11_conf"/>. </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_service">
                <term>Service</term>
                <listitem>
                    <para> A web service that implements the DAISY Online protocol. Corresponds to
                        an instance in the <xref linkend="bib_wsibasicprofile11_conf"/>. </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_serviceDelegate">
                <term>Service Delegate</term>
                <listitem>
                    <para> A file hosting server that is not under the control of the <xref
                            linkend="term_serviceProvider"/>. </para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="term_user">
                <term>User</term>
                <listitem>
                    <para> A person who interacts with, or accesses <xref linkend="term_content"/>
                        from, a <xref linkend="term_service"/> using a <xref
                            linkend="term_readingSystem"/>. </para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="term_serviceProvider">
                <term>Service Provider</term>
                <listitem>
                    <para> The person(s) or organization(s) who own a <xref linkend="term_service"
                        />. </para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="term_session">
                <term>Session</term>
                <listitem>
                    <para>A sequence of <xref linkend="term_operation"/>s between one <xref
                            linkend="term_readingSystem"/> and one <xref linkend="term_service"/>
                        with an identifier defined by the <xref linkend="term_service"/>. A session
                        may persist across several <link linkend="bib_http11">HTTP</link>
                        connections. Session IDs may be reused at the <xref linkend="term_service"
                        />'s discretion.</para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_operation">
                <term>Operation</term>
                <listitem>
                    <para> A <xref linkend="bib_wsdl1.1"/> operation. An action supported by the
                            <xref linkend="term_service"/>. </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_interface">
                <term>Interface</term>
                <listitem>
                    <para> A <xref linkend="bib_wsdl1.1"/> port type. A set of <xref
                            linkend="term_operation"/>s supported by the <xref
                            linkend="term_service"/>. </para>
                </listitem>
            </varlistentry>
            <!--
			<varlistentry xml:id="term_parameter">
                <term>Parameter</term>
                <listitem>
                    <para>
                        <remark>This is not defined in any of the referred specs.
						I don't think it would be of any help to define it here. -Geoff</remark>
                    </para>
                </listitem>
            </varlistentry>
			-->
            <varlistentry xml:id="term_fault">
                <term>Fault</term>
                <listitem>
                    <para> A <xref linkend="bib_soap1.1"/> Fault. It is used to carry error and/or
                        status information within a SOAP message. <xref linkend="apiReferenceFaults"
                        /> defines the faults used for this protocol. </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_content">
                <term>Content</term>
                <listitem>
                    <para> Assets made available by the <xref linkend="term_service"/>. Can refer to
                        DAISY DTBs or other resources. </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_contentIdentifier">
                <term>Content Identifier</term>
                <listitem>
                    <para>An identifier of a <xref linkend="term_content"/> item. This identifier is
                        defined by the <xref linkend="term_service"/> and is exposed in the <xref
                            linkend="bib_dublinCore"/>
                        <literal>identifier</literal> field of the <xref
                            linkend="tp_contentMetadata"/> type. The identifier should be
                        universally unique and static, and must not change between sessions.</para>
                    <note>
                        <para>It is not guaranteed that identifiers embedded in certain content
                            formats match this content identifier.</para>
                    </note>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_download">
                <term>Download</term>
                <listitem>
                    <para> Transfer of <xref linkend="term_content"/> from the <xref
                            linkend="term_service"/> to the <xref linkend="term_readingSystem"/>,
                        which the reading system stores indefinitely. </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_streaming">
                <term>Streaming</term>
                <listitem>
                    <para> Transfer of <xref linkend="term_content"/> from the <xref
                            linkend="term_service"/> to the <xref linkend="term_readingSystem"/>,
                        which the reading system renders immediately and stores only
                        temporarily.</para>
                    <note>
                        <para>Download and streaming of content are reading system behaviours, not
                            aspects of the protocol proper.</para>
                    </note>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_issue">
                <term>Issue content</term>
                <listitem>
                    <para>Grant access to content. A Reading System uses the <function>
                            <xref linkend="op_issueContent"/>
                        </function> operation to request this of the Service. </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_return">
                <term>Return content</term>
                <listitem>
                    <para>Give up access to content. A Reading System removes the content locally
                        and uses the <function>
                            <xref linkend="op_returnContent"/>
                        </function> operation to notify the Service to revoke access. This term is
                        only defined for lent or loaned content, not for free or purchased content.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry xml:id="term_serviceAddress">
                <term>Service address</term>
                <listitem>
                    <para>The URI where a Service has published the WSDL document defining the DAISY
                        Online Service. <remark role="todo">TODO fix this def</remark></para>
                </listitem>
            </varlistentry>
        </variablelist>
    </chapter>

    <chapter xml:id="conformance" conformance="normative">
        <title>Conformance Definitions</title>
        <section xml:id="conformance_service">
            <title>Service Conformance</title>
            <para>A <xref linkend="term_service"/> is conformant with this specification when: </para>
            <itemizedlist>
                <listitem>
                    <para>It publishes a <xref linkend="bib_wsdl1.1"/> document at its <xref
                            linkend="term_serviceAddress"/> whose contents comply with the
                        requirements defined in <xref linkend="appendixWSDL"/></para>
                </listitem>
                <listitem>
                    <para>It provides implementations of all required <xref linkend="term_operation"
                        />s of this protocol, as defined in <xref linkend="apiReferenceRequired"
                        /></para>
                </listitem>
                <listitem>
                    <para>It complies with the Service Type-specific requirements defined in <xref
                            linkend="fundamentals_serviceTypes_reqs_library"/> and/or <xref
                            linkend="fundamentals_serviceTypes_reqs_shop"/></para>
                </listitem>
                <listitem>
                    <para>It complies with the Content Provision Model-specific requirements defined
                        in <xref linkend="fundamentals_contentProvisionModel_reqs_outofband"/>
                        and/or <xref linkend="fundamentals_contentProvisionModel_reqs_browse"
                        /></para>
                </listitem>
                <listitem>
                    <para>It supports the protocols defined in <xref
                            linkend="fundamentals_protocols"/></para>
                </listitem>
                <listitem>
                    <para>
                        <remark role="todo">TODO other service conformance reqs</remark>
                    </para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="conformance_readingSystem">
            <title>Reading System Conformance</title>
            <para>A <xref linkend="term_readingSystem"/> is conformant with this specification when: </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <remark role="todo">TODO RS conformance reqs</remark>
                    </para>
                </listitem>
            </itemizedlist>
        </section>
    </chapter>

    <chapter xml:id="fundamentals">
        <title>Protocol Fundamentals</title>

        <section xml:id="fundamentals_serviceTypes" conformance="normative"
            xreflabel="Service types">
            <title>Service Types</title>
            <para>This protocol has been designed to support two types of Services:</para>
            <itemizedlist>
                <listitem xml:id="fundamentals_serviceType_library" xreflabel="Library Service type">
                    <para><emphasis>Library-type</emphasis> services, which operate using a loan
                        programme for <xref linkend="term_content"/>. The Content is borrowed, and
                        at some point it must be returned to the Service Provider.</para>
                </listitem>
                <listitem xml:id="fundamentals_serviceType_shop" xreflabel="Shop Service type">
                    <para><emphasis>Shop-type</emphasis> services, which includes both commercial
                        (purchase) and free-of-charge content provison, where the content once
                        issued belongs to the client indefinitely.</para>
                </listitem>
            </itemizedlist>

            <para>The choice of Service type is not exclusive. Service Providers must offer one but
                may offer both of these types in a single Service.</para>

            <para>While the protocol Interface and operational contract is generally common to these
                Services types, there are some deviations, as defined below.</para>

            <section xml:id="fundamentals_serviceTypes_reqs_library">
                <title>Library-type Service Specific Requirements</title>
                <para>A Library-type Service must:</para>
                <itemizedlist>
                    <listitem>
                        <para>Manage the User's collection of borrowed Content, including what
                            Content is currently issued to the User, and what content has expired
                            (e.g. Content that should be returned).</para>
                    </listitem>
                    <listitem>
                        <para>Support exposing the above lists of borrowed and expired content to
                            the Reading System by providing an implementation of the <xref
                                linkend="op_getContentList"/> operation, when invoked with the
                                <code>issued</code> and <code>expired</code> values of that
                            operations' <parameter>id</parameter> parameter</para>
                    </listitem>
                    <listitem>
                        <para>Provide an implementation of the <xref linkend="op_returnContent"/>
                            operation, and contractually let an invocation of that operation signal
                            the end of the issuance period for a given Content item.</para>
                    </listitem>
                    <listitem>
                        <para><remark role="todo">Supply the @borrowed attribute - wait for Issue 132</remark></para>
                    </listitem>
                    
                    <listitem>
                        <para>Declare its offering of a Library-style service in the <xref
                                linkend="tp_supportedServiceTypes"/> element in the <xref
                                linkend="tp_serviceAttributes"/> type returned by the <xref
                                linkend="op_getServiceAttributes"/> operation.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section xml:id="fundamentals_serviceTypes_reqs_shop">
                <title>Shop-type Service Specific Requirements</title>
                <para>A Shop-type Service must:</para>
                <itemizedlist>
                    <listitem>
                        <para>Declare its offering of a Shop-style service in the <xref
                                linkend="tp_supportedServiceTypes"/> element in the <xref
                                linkend="tp_serviceAttributes"/> type returned by the <xref
                                linkend="op_getServiceAttributes"/> operation.</para>
                    </listitem>
                </itemizedlist>
            </section>

        </section>

        <section xml:id="fundamentals_contentProvisionModels" conformance="normative"
            xreflabel="Content Provision Models">
            <title>Content Provision Models</title>
            <para>This protocol has been designed to support two fundamental models for content
                provision.</para>
            <itemizedlist>
                <listitem xml:id="fundamentals_contentProvisionModel_outofband"
                    xreflabel="Out-of-band Content Provision Model">
                    <para>The <emphasis>out-of-band</emphasis> content provision model, where the
                        User through some form of out-of-band mechanism (e.g. a web form or
                        telephone) selects content to request issuance and transfer of.</para>
                </listitem>
                <listitem xml:id="fundamentals_contentProvisionModel_browse"
                    xreflabel="Browse Content Provision Model">
                    <para>The <emphasis>browse</emphasis> content provision model, where the User
                        browses the Service's collection using operations defined by this protocol,
                        and interactively selects Content to request issuance and transfer
                        of.</para>
                </listitem>
            </itemizedlist>

            <para>A given Service must offer one and may offer both models of content provision.
                Reading Systems may be designed to support one or both of these content provision
                models. A Reading System may invoke operations associated with both models during
                the same session, providing that the Service supports both models.</para>

            <section xml:id="fundamentals_contentProvisionModel_reqs_outofband">
                <title>Out-of-band Content Provision Model Requirements</title>
                <para>A Service employing the Out-of-band Content Provision Model must:</para>
                <itemizedlist>
                    <listitem>
                        <para>Provide one or several out-of-band mechanisms that lets the User
                            select Content to request issuance of.</para>
                    </listitem>
                    <listitem>
                        <para>Support exposing the selected Content to the Users' Reading System(s)
                            by providing an implementation of the <xref linkend="op_getContentList"
                            /> operation, when invoked with the <code>new</code> value of that
                            operations' <parameter>id</parameter> parameter</para>
                    </listitem>
                    <listitem>
                        <para>Declare its support for the out-of-band Content Provision Model in the
                                <xref linkend="tp_supportedContentProvisionModels"/> element in the
                                <xref linkend="tp_serviceAttributes"/> type returned by the <xref
                                linkend="op_getServiceAttributes"/> operation.</para>
                    </listitem>
                </itemizedlist>
            </section>
            <section xml:id="fundamentals_contentProvisionModel_reqs_browse">
                <title>Browse Content Provision Model Requirements</title>
                <para>A Service employing the Browse Content Provision Model must:</para>
                <itemizedlist>
                    <listitem>
                        <para>Provide support for <link linkend="fundamentals_dynamic_menus">Dynamic
                                Menus</link> by implementing the <xref linkend="op_getQuestions"/>
                            operation, and provide one or several mechanisms (such as a search
                            feature or exposure of precomposed lists) within the Dynamic Menu
                            framework that lets the User select Content to request issuance
                            of.</para>
                    </listitem>
                    <listitem>
                        <para>Declare its support for the Browse Content Provision Model in the
                                <xref linkend="tp_supportedContentProvisionModels"/> element in the
                                <xref linkend="tp_serviceAttributes"/> type returned by the <xref
                                linkend="op_getServiceAttributes"/> operation.</para>
                    </listitem>
                </itemizedlist>
            </section>

        </section>

        <section xml:id="fundamentals_protocols" conformance="normative">
            <title>Underlying protocols</title>
            <para>A compliant Service and Reading System must support the following underlying
                protocols: <itemizedlist>
                    <listitem>
                        <para>
                            <xref linkend="bib_http11"/>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <xref linkend="bib_wsibasicprofile11"/>
                        </para>
                        <para> The WSDL Binding Style used in the normative WSDL available in <xref
                                linkend="appendixWSDL"/>, is "Wrapped Document-literal." this style
                            is a subset of the Document-Literal Style, satisfies R2712 "A
                            document-literal binding MUST be serialized as an ENVELOPE with a
                            soap:Body whose child element is an instance of the global element
                            declaration referenced by the corresponding wsdl:message part" in <xref
                                linkend="bib_doc-lit-conformance"/>, and thus is compliant with
                                <xref linkend="bib_wsibasicprofile11"/>. A Daisy Online protocol
                            compliant WSDL must not use any other <xref
                                linkend="bib_wsibasicprofile11"/> permitted Binding styles (i.e.
                            RPC-Literal). </para>
                        <note>
                            <para><remark role="todo">TODO Kenny this note can be removed
                                    right?</remark><xref linkend="bib_httpcookies"/> states "R1121
                                An INSTANCE SHOULD NOT require consumer support for Cookies in order
                                to function correctly." The Daisy Online protocol is a session based
                                protocol, and HTTP cookies thus are fundamental to the protocol.
                            </para>
                        </note>
                    </listitem>
                    <listitem>
                        <para>Secure HTTP (HTTPS) through the use of <xref linkend="bib_ssl3.0"/>
                            and <xref linkend="bib_tls1.0"/>
                        </para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section xml:id="fundamentals_dynamic_menus" conformance="informative">
            <title>Dynamic Menus</title>
            <para>
                <remark role="todo">TODO Kenny/Nick Describe Dynamic Menus in general terms, give
                    examples (as in /scn-temp/). Do not include the search example here, as that
                    should be in <xref linkend="operations_content_selection_browse_example"
                    /></remark>
            </para>
            <para>
                <remark role="todo">Need to formally define DMG endpoints and limitations on
                    callback, but perhaps not here, rather in XSD (see note in the questions element
                    in xsd). Examples provided here must touch on the endpoints and callback limits
                    though.</remark>
            </para>
        </section>
    </chapter>

    <chapter xml:id="operations" conformance="normative">
        <title>Protocol Operations</title>

        <section xml:id="operations_session">
            <title>Session Management and Authentication</title>

            <section xml:id="operations_session_httpAuthentication">
                <title>http(s) authentication</title>
                <para>
                    <remark role="todo">TODO Kenny add whatever we need to say about http(s),
                        cookies and authentication in the context of a "session" (read below
                        first)</remark>
                </para>
                <para>
                    <remark role="todo">TODO heres something on cookies from the old spec: " The
                        Service must then perform the following steps to complete the authentication
                        process: Verify the credentials passed by the Reading System to the logON
                        function. if the authentication was successful, Issue a cookie by embedding
                        it in the Set-Cookie http header, and send it to the Reading System along
                        with the response to the logOn function. If the authentication was not
                        successful, a cookie may not be sent along with the response. A Daisy Online
                        Delivery Service is session-aware by design. Sessions must be tracked and
                        managed through the use of cookies. Upon successful authentication, the
                        Reading System must be issued a cookie as described above. The Reading
                        system must send this cookie by embedding it in the Cookie http header with
                        all subsequent http requests to the Service. A cookie in this context is
                        opaque i.e. the Reading System is not required to understand the contents of
                        the Cookie. "</remark>
                </para>
            </section>

            <section xml:id="operations_session_duration">
                <title>Session Duration</title>
                <para role="definiton" xml:id="def_sessionDuration"> A <xref linkend="term_session"
                    /> begins after a successful <function>
                        <xref linkend="op_logOn"/>
                    </function> operation. The session ends after the Reading System has invoked the <function>
                        <xref linkend="op_logOff"/>
                    </function> operation, or it may be terminated by the Service.</para>

                <para>This specification does not define any behaviors regarding Service termination
                    of Sessions; time out intervals, reasons for forced termination, and related
                    aspects are all defined by the implementation.</para>

                <para>A Session may cover multiple HTTP connections. Since transferring and
                    rendering of content may be very time-consuming, Sessions should be kept open
                    for as long as possible, in order to minimize the risk for a negative User
                    experience.</para>
            </section>

            <section xml:id="operations_session_initializationSequence">
                <title>Session Initialization Sequence</title>

                <para role="definition" xml:id="def_sessionInitializationSequence"
                    xreflabel="Session Initialization Sequence"> To ensure interoperability and
                    consistent behavior between implementations, Reading Systems must invoke the
                    following operations in the given sequence at the onset of every Session, and
                    before invoking any other protocol operation. <orderedlist>
                        <listitem>
                            <para>The <function>
                                    <xref linkend="op_logOn"/>
                                </function> operation, with a return value of
                                    <constant>true</constant> (<xref linkend="bib_xsdDatatypes"/>)
                            </para>
                        </listitem>
                        <listitem>
                            <para> The <function>
                                    <xref linkend="op_getServiceAttributes"/>
                                </function> operation</para>
                        </listitem>
                        <listitem>
                            <para> The <function>
                                    <xref linkend="op_setReadingSystemAttributes"/>
                                </function> operation, with a return value of
                                    <constant>true</constant> (<xref linkend="bib_xsdDatatypes"/>)
                            </para>
                        </listitem>
                    </orderedlist>
                </para>

                <para>If a Service throws a <link linkend="apiReferenceFaults">Fault</link> during
                    the <token>Session Initialization Sequence</token> phase, or if the above
                    specified return values are not given, then the session remains uninitialized
                    and must be either be reinitialized, or the attempt to log the Reading System on
                    to the Service must be aborted.</para>

                <para>All operations defined by this specification except the <function>
                        <xref linkend="op_logOn"/>
                    </function> operation are valid to invoke after the <token>Session
                        Initialization Sequence</token> has been completed.</para>

                <para>A Service must throw a <errorname>
                        <xref linkend="ft_invalidOperationFault"/>
                    </errorname> if a Reading System does not honor the above initialization
                    sequence.</para>

                <note><para>This specification does not stipulate the nature of the credentials used 
                    to authenticate a Reading System. The credentials used in this context may be 
                    credentials associated to a single User, a group of Users, a Reading System, or 
                    any other entity specified by a Service provider.</para></note>

                <section xml:id="operations_session_initializationExamples"
                    conformance="informative">
                    <title>Session Initialization Examples</title>
                    <example>
                        <title>Successful Session Intialization Sequence</title>
                        <orderedlist>
                            <listitem>
                                <para>[Required] The Reading System invokes the <function>
                                        <xref linkend="op_logOn"/>
                                    </function> operation, passing the following credentials:</para>
                                <programlisting><xi:include href="./samples/initialization-logon.xml" parse="text"/></programlisting>
                                <para>The service returns <constant>true</constant> to signal that
                                    the logon was successful.</para>
                            </listitem>
                            <listitem>
                                <para>[Required] The Reading System invokes the <function>
                                        <xref linkend="op_getServiceAttributes"/>
                                    </function> operation. The service returns a
                                        <type>serviceAttributes</type> type:</para>
                                <programlisting><xi:include href="./samples/initialization-serviceAttributes.xml" parse="text"/></programlisting>
                            </listitem>
                            <listitem>
                                <para>[Required] The Reading System invokes the <function>
                                        <xref linkend="op_setReadingSystemAttributes"/>
                                    </function> operation, passing a <type>
                                        <xref linkend="tp_readingSystemAttributes"/>
                                    </type> type:</para>
                                <programlisting><xi:include href="./samples/initialization-readingSystemAttributes.xml" parse="text"/></programlisting>
                                <para>The <xref linkend="def_sessionInitializationSequence"/> is now
                                    complete, and the Reading System may commence by invoking other
                                    operations in the protocol. At this point, Reading Systems
                                    should invoke the <function>
                                        <xref linkend="op_getServiceAnnouncements"/>
                                    </function> operation to retrieve any service announcements
                                    awaiting the User's attention.</para>
                            </listitem>
                            <listitem>
                                <para>[Optional] Providing that the Service supports this <link
                                        linkend="op_getServiceAttributes">optional operation</link>,
                                    the Reading System invokes the <function>
                                        <xref linkend="op_getServiceAnnouncements"/>
                                    </function> operation, retrieving an <type>
                                        <xref linkend="tp_announcements"/>
                                    </type> type in return:</para>
                                <programlisting><xi:include href="./samples/initialization-serviceAnnouncements.xml" parse="text"/></programlisting>
                            </listitem>
                        </orderedlist>
                    </example>
                </section>
            </section>
            <!--
            <section xml:id="operations_session_attributes">
                <title>Service and Reading System Attributes</title>
                <para>
                    <remark role="todo">TODO explain details of serviceAttributes and
                        readingSystemAttributes, make clear that they are session-based</remark>
                </para>

            </section> -->
        </section>

        <section xml:id="operations_content_selection">
            <title>Content Selection</title>
            <para>Depending on the <link linkend="fundamentals_contentProvisionModels">content
                    provision model</link> employed, Content selection (e.g. the mechanism with
                which the user selects one or several content items to request issuance and transfer
                of) is performed using two distinct approaches:</para>

            <section xml:id="operations_content_selection_outofband">
                <title>Content Selection using the Out-of-band model</title>

                <para>In the <link linkend="fundamentals_contentProvisionModel_outofband"
                        >Out-of-band model</link> content provison form, content is selected using a
                    mechanism not defined by this protocol, and not involving the Session itself.
                    Through this mechanism, the Service, typically prior to the Session onset, has
                    in its possession a list of Content items to offer to the User. </para>

                <para>To initiate retrieval of these Content items, the Reading System invokes the
                        <xref linkend="op_getContentList"/> operation, passing the value
                        <code>new</code> as the value of the <parameter>id</parameter> parameter,
                    retrieving a <xref linkend="tp_contentList"/> in return.</para>

                <note>
                    <para>A Service declares whether it supports Content selection using the
                        Out-of-band model in the <xref linkend="tp_supportedContentProvisionModels"
                        /> element in the <xref linkend="tp_serviceAttributes"/> type returned by
                        the <xref linkend="op_getServiceAttributes"/> operation.</para>
                </note>

                <section xml:id="operations_content_selection_outofband_examples">
                    <title>Out-of-band Model Content Selection Examples</title>
                    <example>
                        <title>Out-of-band Model Content Selection Example: Daily newspaper
                            subscription</title>
                        <orderedlist>
                            <listitem>
                                <para>Using an out-of-band mechanism such as a web form or
                                    telephone, a User has subscribed to a daily newspaper service.
                                    The service is offered in a "push" style, e.g. the newspaper is
                                    intended to be available in the Users Reading System each
                                    morning, without the User necessarily having to explicitly
                                    identify and request the issuance and transfer of each
                                    individual issue.</para>
                            </listitem>
                            <listitem>
                                <para>The Reading Device invokes the <xref
                                        linkend="op_getContentList"/> operation, passing the value
                                        <code>new</code> as the value of the
                                        <parameter>id</parameter> parameter. The invocation is
                                    either triggered by an explicit User interaction with the
                                    Reading System user interface, or by a Reading System-specific
                                    timer-based feature set to make invocations of this operation
                                    automatically at some interval.</para>
                            </listitem>
                            <listitem>
                                <para>The Service returns a <type>contentList</type> type containing
                                    the Content items offered:</para>
                                <programlisting><xi:include href="./samples/contentSelection-subscr.xml" parse="text"/></programlisting>
                            </listitem>
                            <listitem>
                                <para>Either with or without explicit User interaction (the Reading
                                    System may have an option to support automation of this step in
                                    subscription/cyclic delivery contexts), the Reading System
                                    requests issuance and transfer of the Content. See further <xref
                                        linkend="operations_content_issuing"/></para>
                            </listitem>
                        </orderedlist>
                    </example>
                </section>
            </section>
            <section xml:id="operations_content_selection_browse">
                <title>Content Selection using the Browse model</title>
                <para>In the <link linkend="fundamentals_contentProvisionModel_browse">Browse
                        model</link> content provison form, content is selected dynamically within
                    the Session using the <link linkend="fundamentals_dynamic_menus">Dynamic
                        Menu</link> feature of this protocol.</para>

                <note>
                    <para>A Service declares whether it supports Content selection using the Browse
                        model in the <xref linkend="tp_supportedContentProvisionModels"/> element in
                        the <xref linkend="tp_serviceAttributes"/> type returned by the <xref
                            linkend="op_getServiceAttributes"/> operation. Services may support the
                        Dynamic Menu feature for other purposes than supporting content selection,
                        so the value <code>DYNAMIC_MENUS</code> in <xref
                            linkend="tp_supportedOptionalOperations"/> does not imply that Content
                        Selection using the Browse model is supported.</para>
                </note>

                <section xml:id="operations_content_selection_browse_example">
                    <title>Browse Model Content Selection Example</title>
                    <example>
                        <title>Browse Model Content Selection Example</title>
                        <orderedlist>
                            <listitem>
                                <para>
                                    <remark role="todo">TODO Kenny: give dynamic menu example:
                                        search, with end result contentList</remark>
                                </para>
                            </listitem>
                        </orderedlist>
                    </example>
                </section>
            </section>
        </section>
        <!--
        <section xml:id="operations_content_selection" conformance="informative">
            <title>Content Selection</title>
            <section xml:id="operations_content_selection_menuless" conformance="normative">
                <title>menuless Content Selection</title>
                <para>The Service must provide two contentLists, which may be accessed by calling
                    the <function>
                        <xref linkend="op_getContentList"/>
                    </function> operation with an <parameter>id</parameter> parameter of
                        <literal>available</literal> or <literal>expired</literal>. </para>
                <itemizedlist>
                    <listitem>
                        <para>The <literal>available</literal> list shall contain those content
                            items that the User is authorized to access with the Reading System.
                            These may or may not be issued or borrowed.</para>
                    </listitem>
                    <listitem>
                        <para>The <literal>expired</literal> list shall contain those content items
                            issued to the User which the Service requires to be removed from the
                            Reading System and returned with the <function>
                                <xref linkend="op_returnContent"/>
                            </function> operation. </para>
                    </listitem>
                </itemizedlist>
                <para> </para>
                <para>
                    <remark role="todo">Describe the menuless scenario (Service-driven selection)
                        and the use of getContentList(default/borrowed)</remark>
                </para>
            </section>
            <section xml:id="operations_content_selection_interactive" conformance="normative">
                <title>Interactive Content Selection</title>
                <para>
                    <remark role="todo">Describe the normative parts of the interactive
                        scenario</remark>
                </para>
            </section>
        </section>
-->
        <section xml:id="operations_content_issuing">
            <title>Issuing and transfer of content</title>
            <para>Given a <xref linkend="tp_contentList"/>, retrieved using one of the methods
                described in <xref linkend="operations_content_selection"/>, the Reading System can
                proceed to request issuance of selected content items within the
                    <literal>contentList</literal>, followed by download or streaming of the
                resources that constitute the content. </para>
            <para>
                <remark role="todo">TODO the below is ambivalent in terms of contentItem@borrowed vs
                    contentMetadata@borrowed</remark>
            </para>
            <section xml:id="operations_content_issuing_retrieval_sequence">
                <title>Content Retrieval Sequence</title>
                <para>To request issuance of and retrieve the resources of a Content item, a Reading
                    System must invoke the following operations in the given sequence. Note that
                    both involved operations take the <xref linkend="term_contentIdentifier"/> as a
                    parameter.</para>
                <orderedlist>
                    <listitem>
                        <para>The <function>
                                <xref linkend="op_issueContent"/>
                            </function> operation, with a return value of <constant>true</constant>
                                (<xref linkend="bib_xsdDatatypes"/>) </para>
                    </listitem>
                    <listitem>
                        <para>[any other operation]</para>
                    </listitem>
                    <listitem>
                        <para> The <function>
                                <xref linkend="op_getContentResources"/>
                            </function> operation</para>
                    </listitem>
                </orderedlist>

                <para>The <xref linkend="op_issueContent"/> operation constitutes the formal User
                    request to get access to the Content. This operation must be invoked prior to
                    the invocation of <xref linkend="op_getContentResources"/>, and must be invoked
                    regardless of whether the content is issued in a <link
                        linkend="fundamentals_serviceType_library">library-type</link> or <link
                        linkend="fundamentals_serviceType_shop">shop-type</link> context.</para>

                <para>If a Service returns <constant>false</constant> (<xref
                        linkend="bib_xsdDatatypes"/>) or throws a <link linkend="apiReferenceFaults"
                        >fault</link> on the <function>
                        <xref linkend="op_issueContent"/>
                    </function> operation, then the Content has not been issued. On invocations of <function>
                        <xref linkend="op_getContentResources"/>
                    </function> for a content item that has not been issued, a Service must throw a
                        <xref linkend="ft_invalidParameterFault"/>.</para>

                <para>The <xref linkend="op_getContentResources"/> operation exposes all resources
                    that constitute the content to the Reading System. Service Providers must allow
                    at least one call to <function>getContentResources</function> for each issued
                    Content item. Service Providers may allow multiple subsequent
                        <function>getContentResources</function> invocations for the same content,
                    possibly spanning several Sessions.</para>
            </section>

            <section xml:id="operations_content_issuing_retrieval_sequence_example"
                conformance="informative">
                <title>Content Retrieval Example</title>
                <example>
                    <title>Content Retrieval</title>
                    <para>Given the <xref linkend="term_contentIdentifier"/>
                        <varname>foo</varname>, initially retrieved from the <literal>id</literal>
                        attribute on a <literal>contentItem</literal> in a <xref
                            linkend="tp_contentList"/>:</para>
                    <orderedlist>
                        <listitem>
                            <para>[Optional] The Reading System invokes the <function>
                                    <xref linkend="op_getContentMetadata"/>
                                </function> operation using <code>foo</code> as the value of the
                                    <parameter>contentID</parameter> parameter, which returns a
                                    <xref linkend="tp_contentMetadata"/> type, containing content
                                metadata and samples.</para>
                            <programlisting><xi:include href="./samples/retrieval-contentMetadata.xml" parse="text"/></programlisting>
                        </listitem>
                        <listitem>
                            <para>[Required] For content that the User requests issuance of, the
                                Reading System invokes the <xref linkend="op_issueContent"/>
                                operation, using <code>foo</code> as the value of the
                                    <parameter>contentID</parameter>. To signal that the Content was
                                issued, the Service returns <constant>true</constant>. </para>
                        </listitem>
                        <listitem>
                            <para>[Optional] At this point the Reading System may call other
                                operations. The current Session may be terminated, and a new session
                                initiated.</para>
                        </listitem>
                        <listitem>
                            <para>[Required] The Reading System invokes the <xref
                                    linkend="op_getContentResources"/> operation, which returns a
                                    <xref linkend="tp_resources"/> type:</para>
                            <programlisting><xi:include href="./samples/retrieval-resources.xml" parse="text"/></programlisting>
                        </listitem>
                    </orderedlist>
                </example>
            </section>

            <section xml:id="operations_content_download">
                <title>Downloading and streaming of content</title>
                <para>
                    <remark role="todo">TODO who writes this section?</remark>
                </para>
                <para>
                    <remark role="todo">TODO Add whatever we need to say on this topic. Refer to
                        Service Delegates. Note that download/streaming can occur after session
                        termination.</remark>
                </para>
                <para>
                    <remark>TODO Important things to include in this section:</remark>
                </para>
                <para>Info on the resources type: how some content formats allows mimetypes to be
                    used to get the most significant stuff first</para>
                <para>If credentials are needed to access the Content, then the Service must supply
                    the credentials in the <abbrev>URL</abbrev> of the resource. These credentials
                    may be the same as the <function>
                        <xref linkend="op_logOn"/>
                    </function> credentials, but the Reading System must not send basic
                    authentication credentials if they were not supplied in the
                    <abbrev>URL</abbrev>.</para>
                <para>A DAISY Online session does not need to be active in order for a Reading
                    System to download or stream Content.</para>
                <para>Resources may be stored on the Service's servers or with Service Delegates,
                    without restriction. Note that Service Delegates may require different
                    credentials for access to resources, or may not require credentials at all. The
                    Service must provide this information to Reading Systems.</para>
                <para>Range headers for HTTP GET must be supported by the Service. Since there is no
                    way to enforce this requirement on Service Delegates, Reading Systems must be
                    able to handle servers that do not support range headers.</para>
            </section>

            <section xml:id="operations_content_issuing_pdtb">
                <title>Rights management</title>
                <para>A Service may provide all or parts of its content collection in protected
                    form. This version of this specification allows the <xref linkend="bib_pdtb2"/>
                    format to be used for content protection.</para>
                <para>
                    <remark role="todo">TODO discuss interop issues: Neither Reading Systems nor
                        Services are required to support the PTDB2 format. How is the support
                        communicated at initializationtime (*attributes); what will happen in case
                        of mismatch</remark>
                </para>
                <para>
                    <remark role="todo">TODO give examples of PTDB2 contentMetadata etc for
                        encrypted books</remark>
                </para>
                <para>If Content is protected using <xref linkend="bib_pdtb2"/>, then there will be
                    a metadata item in the <type>
                        <xref linkend="tp_contentMetadata"/>
                    </type> named <literal>pdtb2:specVersion</literal> with a value of
                        <literal>2005-1</literal> and there will be resources with mimeTypes
                    beginning with <literal>application/x-pdtbâ€¦</literal>. The Reading System can
                    access these resources even if it does not support <xref linkend="bib_pdtb2"/>,
                    but it might not be able to decrypt all the Content.</para>
                <para>If some Content has an Authorization Object (<abbrev>AO</abbrev>), the Reading
                    System can inspect it for the name of the key that secures the key to decrypt
                    the Content.</para>
                <para>The Reading System may call <function>
                        <xref linkend="op_getKeyExchangeObject"/>
                    </function> with a list of names of keys on its keyring (these can be all or
                    some of the symmetric keys or public/private keypairs the Reading System
                    supports) and the name of the requested key. The Service is free to choose any
                    of the keys in the <parameter>supportedPublicKeyNames</parameter> to encrypt the
                    Key Exchange Object (<abbrev>KXO</abbrev>). If the Service does not have any of
                    those keys or if the User is not authorized to access the Content, then the
                    Service will instead reply with an <errorname>
                        <xref linkend="ft_invalidOperationFault"/>
                    </errorname>. The Service is responsible for keeping a list of authorized key
                    names.</para>
                <example>
                    <title>An Encrypted DTB</title>
                    <para>A User wants to read an encrypted <abbrev>PDTB</abbrev> from the Zenith
                        Library. The <abbrev>AO</abbrev> is itself encrypted with a key named
                            <literal>DAISY.gy-zlog.afc26219-auth</literal>:</para>
                    <programlisting><xi:include href="./samples/authorization.xml" parse="text"/></programlisting>
                    <para>The User has keys for the Reading System (an Acme Reader Express) as well
                        as user account keys supplied by Haute-BibliothÃ¨que and Apex Talking Books,
                        Inc. The Reading System calls the <function>
                            <xref linkend="op_getKeyExchangeObject"/>
                        </function> operation with the first parameter,
                            <parameter>supportedPublicKeyNames</parameter>, as:</para>
                    <programlisting>
&lt;itemList&gt;
  &lt;!-- The vendor, model and instance keys of the reading system. --&gt;
  &lt;item&gt;DAISY.lv-acme&lt;/item&gt;
  &lt;item&gt;DAISY.lv-acme.ReaderExpress&lt;/item&gt;
  &lt;item&gt;DAISY.lv-acme.0034218&lt;/item&gt;
  &lt;!-- User account keys granted by Haute-BibliothÃ¨que and Apex. --&gt;
  &lt;item&gt;DAISY.ca-qqhb.006442&lt;/item&gt;
  &lt;item&gt;DAISY.au-atbi.userKey-4C452DB4&lt;/item&gt;
&lt;/itemList&gt;</programlisting>
                    <para>and the second parameter,<parameter>requestedKeyName</parameter>, as
                            <literal>DAISY.gy-zlog.afc26219-auth</literal>.</para>
                    <para>The Service determines that the User is authorized to receive this key.
                        The Service Provider has determined that the Acme Reader Express is a
                        trusted Reading System model, so the Service returns a <abbrev>KXO</abbrev>
                        encrypted with the model key,
                        <literal>DAISY.lv-acme.ReaderExpress</literal>:</para>
                    <programlisting><xi:include href="./samples/kxo.xml" parse="text"/></programlisting>
                </example>
                <example>
                    <title>Rights Management without Encryption</title>
                    <para>Note that PDTB2 can be used for rights expression without encryption. The
                        following <abbrev>AO</abbrev> describes the permission to play the audio of
                        a certain book which expires at midnight on 31 October 2010, but has no
                        encrypted parts.</para>
                    <programlisting><xi:include href="./samples/authorization-unencrypted.xml" parse="text"/></programlisting>
                    <para>A PDTB2-compliant reading system will prevent the user from playing the
                        audio after that time, even though it is not encrypted. A non-compliant
                        reading system's behaviour is, naturally, undefined.</para>
                </example>
            </section>
        </section>
        <section xml:id="operations_content_return">
            <title>Content Return</title>
            <para>Content return is employed in the case where a Reading System has content issued
                from a Service that employs a <link linkend="fundamentals_serviceType_library"
                    >library-type</link> Service, and where the given Content item issued from that
                Service is explicitly of a borrowed nature (as defined by the value of the
                    <varname>borrowed</varname> attribute on <xref linkend="tp_contentItem"/> in a
                    <xref linkend="tp_contentList"/>).<remark role="todo">note may stay in
                    contentmetadata, if so fix previous link</remark></para>
            <para>A <link linkend="fundamentals_serviceType_library">library-type</link> Service is
                required to manage the User's Content collection in terms of what Content is issued,
                and what Content has expired. By invoking <xref linkend="op_getContentList"/> with
                the <parameter>id</parameter> parameter valued <code>expired</code>, a Reading
                System will retrieve a list of the Content items that has expired, if any. For each
                of the Content items in this list it must then delete the Content from its local
                storage media, followed by an invocation of <xref linkend="op_returnContent"
                />.</para>

            <section xml:id="operations_content_return_example" conformance="informative">
                <title>Content Return Example</title>
                <example>
                    <title>Content Return Example</title>
                    <orderedlist>
                        <listitem>
                            <para>[Required] The Reading System invokes the <function>
                                    <xref linkend="op_getContentList"/>
                                </function> operation with the identifier
                                <literal>expired</literal>. The service returns a <xref
                                    linkend="tp_contentList"/> containing the Content items that has
                                expired. </para>
                            <programlisting><xi:include href="./samples/return-contentList.xml" parse="text"/></programlisting>
                            <para>(Note that the <literal>id</literal> value of the
                                    <type>contentItem</type> elements in the list define the <xref
                                    linkend="term_contentIdentifier"/> of the Content.)</para>
                        </listitem>
                        <listitem>
                            <para>[Required] For each of the Content items in the returned list, the
                                Reading System deletes the corresponding resources from its local
                                filesystem. </para>
                        </listitem>
                        <listitem>
                            <para>[Required] For each of the Content items in the returned list, the
                                Reading System invokes the <xref linkend="op_returnContent"/>
                                operation, passing the <xref linkend="term_contentIdentifier"
                                />.</para>
                        </listitem>
                        <listitem>
                            <para>[Required] For each of the <xref linkend="op_returnContent"/>
                                invocations, the Service returns <literal>true</literal> to signal
                                that the Content item was succesfully returned.</para>
                        </listitem>
                    </orderedlist>
                </example>
            </section>

        </section>


        <section xml:id="operations_service_announcements">
            <title>Service Announcements</title>
            <para><remark role="todo">TODO fix this intro</remark> Service Announcements are used as
                a means for the Service to provide various types of information to the User.
                Examples include: information on Service up- or downtime, information on additions
                to the Content collection, and, in the case of <link
                    linkend="fundamentals_serviceType_library">library-type Services</link>,
                information on expired Content.</para>
            <para>Note that <xref linkend="op_getServiceAnnouncements"/> is an optional operation -
                Services may or may not support this protocol feature.</para>

            <para>Service Announcements are typically retrieved at the onset of each <xref
                    linkend="term_session"/>, but may be retrieved at any stage of a Session, as
                long as the <xref linkend="def_sessionInitializationSequence"/> has been
                successfully completed.</para>

            <para>If a Service <link linkend="op_getServiceAttributes">supports this optional
                    operation</link>, then Reading Systems should invoke the operation at least once
                per Session. If a Service does not support this operation, then invocations of it
                must result in an <xref linkend="ft_operationNotSupportedFault"/>.</para>

            <para>A Reading System should invoke the <function>
                    <xref linkend="op_markAnnouncementsAsRead"/>
                </function> operation to signal to the Service which of the provided announcements
                have been consumed by the User. Consistent use of <function>
                    <xref linkend="op_markAnnouncementsAsRead"/>
                </function> enables the Service to avoid exposing the User to the same announcement
                multiple times. Note that a Service may also on its own accord remove individual
                announcements from the set of distributed announcements, as the embedded messages
                become outdated or otherwise obsolete.</para>

            <note>
                <para>The identifier values of individual <xref linkend="tp_announcement"/>s in the
                        <xref linkend="tp_announcements"/> type are only valid for the duration of
                    the current Session. A Reading System must only invoke <function>
                        <xref linkend="op_markAnnouncementsAsRead"/>
                    </function> using parameter values supplied via a previous invocation of <function>
                        <xref linkend="op_getServiceAnnouncements"/>
                    </function>, made during the same Session. </para>
            </note>

            <section xml:id="operations_service_announcements_example" conformance="informative">
                <title>Service Announcements Example</title>
                <example>
                    <title>Service Announcements </title>
                    <orderedlist>
                        <listitem>
                            <para>[Optional] The Reading System invokes the <function>
                                    <xref linkend="op_getServiceAnnouncements"/>
                                </function> operation, retrieving a <xref linkend="tp_announcements"
                                /> type.</para>
                            <programlisting><xi:include href="./samples/announcements-retrieval.xml" parse="text"/></programlisting>
                        </listitem>
                        <listitem>
                            <para>The user consumes the first and second of the three
                                messages.</para>
                        </listitem>
                        <listitem>
                            <para>[Optional] The Reading System invokes the <function>
                                    <xref linkend="op_markAnnouncementsAsRead"/>
                                </function> operation, signalling that the first and second
                                announcements were consumed.</para>
                            <programlisting><xi:include href="./samples/announcements-markAsRead.xml" parse="text"/></programlisting>
                        </listitem>
                    </orderedlist>
                </example>
            </section>

        </section>

        <section xml:id="operations_bookmarks">
            <title>Bookmarks and Last Reading Position</title>

            <para>If a Service supports the <link linkend="op_getServiceAttributes">optional
                    operations</link>
                <function>
                    <xref linkend="op_setBookmarks"/>
                </function> and <function>
                    <xref linkend="op_getBookmarks"/>
                </function>, then a Reading System may invoke these operations to store and/or
                retrieve a set of bookmarks for a given Content item.</para>

            <para>The <type>
                    <xref linkend="tp_bookmarkSet"/>
                </type> type is a direct derivation of the <token>Portable Bookmarks and
                    Highlights</token> grammar of <xref linkend="bib_z3986-2005"/>. <xref
                    linkend="bib_z3986-2005-bkmk"/> constitutes the normative reference regarding
                the use of this type.</para>

            <para>
                <remark role="todo">TODO Give example of User porting bookmarks between two Reading
                    Systems (last reading pos).</remark>
                <remark role="todo">TODO <link
                        xlink:href="http://code.google.com/p/daisy-online-delivery/issues/detail?id=34"
                        >Issue 34</link></remark>
            </para>
        </section>
        <!--
        <section xml:id="operations_diagnostics">
            <title>Diagnostics and Error Handling</title>
            <para><remark role="todo"></remark></para>
        </section>
        -->
        <section xml:id="operations_complete_session_examples">
            <title>Complete session examples</title>
            <para>
                <remark role="todo">May be overkill, add last or remove.</remark>
            </para>
        </section>

    </chapter>

    <chapter xml:id="apiReference" conformance="normative">
        <title>API Definition</title>
        <para>Dont edit this chapter here in the docbook source - autogenerated from WSDL</para>
    </chapter>

    <chapter xml:id="typeReference" conformance="normative">
        <title>Type Definition</title>
        <para>Dont edit this chapter here in the docbook source - autogenerated from XSD</para>
    </chapter>

    <bibliography conformance="normative">
        <title>References</title>
        <biblioentry xml:id="bib_dublinCore">
            <abbrev>Dublin Core</abbrev>
            <title>
                <link xlink:href="http://dublincore.org/documents/2008/01/14/dces/">Dublin Core
                    Metadata Element Set, Version 1.1</link>
            </title>
            <date>January 2008</date>
        </biblioentry>
        <biblioentry xml:id="bib_infoset">
            <abbrev>INFOSET</abbrev>
            <title>
                <link xlink:href="http://www.w3.org/TR/xml-infoset/">XML Information Set (Second
                    Edition)</link>
            </title>
            <author>
                <personname>J Cowan, R Tobin</personname>
            </author>
            <date>February 2004</date>
        </biblioentry>
        <biblioentry xml:id="bib_iso3166">
            <abbrev>ISO 3166</abbrev>
            <title>
                <link xlink:href="http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html"
                    >ISO 3166-1 - Codes for the representation of names of countries and their subdivisions - Part 1: Country codes</link>
            </title>
        </biblioentry>
        <biblioentry xml:id="bib_RFC2119">
            <abbrev>RFC 2119</abbrev>
            <title>
                <link xlink:href="http://www.ietf.org/rfc/rfc2119.txt">Key words for use in RFCs to
                    Indicate Requirement Levels, RFC 2119</link>
            </title>
            <date>March 1997</date>
        </biblioentry>
        <biblioentry xml:id="bib_mime">
            <abbrev>MIME</abbrev>
            <title>
                <link xlink:href="http://www.rfc-editor.org/rfc/rfc2046.txt">Multipurpose Internet
                    Mail Extensions (MIME) Part Two: Media Types, RFC 2046</link>
            </title>
            <author>
                <personname>N.Freed, et al</personname>
            </author>
            <date>November 1996</date>
        </biblioentry>
        <biblioentry xml:id="bib_xsdDatatypes">
            <abbrev>XML Schema 2</abbrev>
            <title>
                <link xlink:href="http://www.w3.org/TR/xmlschema-2/">XML Schema Part 2: Datatypes
                    Second Edition</link>
            </title>
            <author>
                <personname>P. V. Biron, et al</personname>
            </author>
            <date>28 October 2004</date>
        </biblioentry>
        <!--
        <biblioentry xml:id="refXML">
            <abbrev>XML</abbrev>
            <title>
                <link xlink:href="http://www.w3.org/TR/2006/REC-xml-20060816/">Extensible Markup
                    Language (XML) 1.0 (Fourth Edition)</link>
            </title>
            <author>
                <personname>T. Bray, et al</personname>
            </author>
            <date>November 2008</date>
        </biblioentry>
        -->
        <biblioentry xml:id="bib_http11">
            <abbrev>HTTP 1.1</abbrev>
            <title>
                <link xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">HyperText
                    Transfer Protocol 1.1</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_httpcookies">
            <abbrev>HTTP Cookies</abbrev>
            <title>
                <link
                    xlink:href="http://www.ws-i.org/Profiles/BasicProfile-1.1-2004-08-24.html#HTTP_Cookies"
                    >HTTP cookies in WS-I Basic Profile 1.1</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_doc-lit-conformance">
            <abbrev>Document-Literal Conformance</abbrev>
            <title>
                <link
                    xlink:href="http://www.ws-i.org/Profiles/BasicProfile-1.1-2004-08-24.html#Child_Element_for_Document-Literal_Bindings"
                    >Child Element for Document-Literal Bindings</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_soap1.1">
            <abbrev>SOAP 1.1</abbrev>
            <title>
                <link xlink:href="http://www.w3.org/TR/2000/NOTE-SOAP-20000508/">Simple Object
                    Access Protocol 1.1</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_pdtb2">
            <abbrev>PDTB2</abbrev>
            <title>
                <link xlink:href="http://www.daisy.org/projects/pdtb/daisy-pdtb-spec.html">DAISY
                    Protected Digital Talking Book 2</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_ssl3.0">
            <abbrev>SSL 3.0</abbrev>
            <title>
                <link xlink:href="http://tools.ietf.org/html/draft-ietf-tls-ssl-version3">Secure
                    Sockets Layer 3.0</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_tls1.0">
            <abbrev>TLS 1.0</abbrev>
            <title>
                <link xlink:href="http://www.ietf.org/rfc/rfc2246">Transport Layer Security
                    1.0</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_wsibasicprofile11">
            <abbrev>WS-I Basic Profile 1.1</abbrev>
            <title>
                <link xlink:href="http://www.ws-i.org/Profiles/BasicProfile-1.1-2004-08-24.html"
                    >WS-I Basic Profile 1.1</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_wsibasicprofile11_conf">
            <abbrev>WS-I Basic Profile 1.1 Conformance Targets</abbrev>
            <title>
                <link
                    xlink:href="http://www.ws-i.org/Profiles/BasicProfile-1.1.html#conformance_targets"
                    >WS-I Basic Profile 1.1 Conformance Targets</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_wsdl1.1">
            <abbrev>WSDL 1.1</abbrev>
            <title>
                <link xlink:href="http://www.w3.org/TR/2001/NOTE-wsdl-20010315">Web Services
                    Definition Language 1.1</link>
            </title>
        </biblioentry>

        <biblioentry xml:id="bib_z3986-2005">
            <abbrev>Z39-86.2005</abbrev>
            <title>
                <link xlink:href="http://www.daisy.org/z3986/2005/Z3986-2005.html">ANSI/NISO
                    Z39-86.2005 - Specifications for the Digital Talking Book </link>
            </title>
            <author>
                <personname>M. Moodie, et al</personname>
            </author>
            <date>2005</date>
        </biblioentry>

        <biblioentry xml:id="bib_z3986-2005-bkmk">
            <abbrev>Z39-86.2005-BOOKMARKS</abbrev>
            <title>
                <link xlink:href="http://www.daisy.org/z3986/2005/Z3986-2005.html#bkmk">Portable
                    Bookmarks and Highlights</link> (part of <xref linkend="bib_z3986-2005"/>) </title>
            <author>
                <personname>M. Moodie, et al</personname>
            </author>
            <date>2005</date>
        </biblioentry>


    </bibliography>

    <acknowledgements>
        <title>Acknowledgements</title>
        <para>The following individuals were members of the DAISY Online Working Group at the time
            of the publication of this specification:</para>

        <itemizedlist>
            <listitem>
                <para>
                    <personname>
                        <firstname>Kenny</firstname>
                        <surname>Johar</surname>
                    </personname>
                    <jobtitle>Enterprise Architect</jobtitle>, <orgname>Vision Australia</orgname>
                    (co-chair) </para>
            </listitem>
        </itemizedlist>

        <para>The editors also wish to thank the following individuals for their contribution,
            either as former members of the Working Group, or as individual contributors:</para>

    </acknowledgements>

    <appendix xml:id="appendixWSDL" conformance="normative">
        <title>WSDL Abstract Definition</title>
        <para>The <xref linkend="bib_wsdl1.1"/> document <link xlink:href="do-wsdl-10-wsdl"
                >do-wsdl-10-wsdl</link>, and the document entities referenced from within it,
            formally defines the abstract Web Service contract that all compliant Services must
            adher to.</para>

        <para>All compliant Services must publish a WSDL document at the <xref
                linkend="term_serviceAddress"/> whose <xref linkend="bib_infoset"/> - with the
            exception of the WSDL <code>service</code> elements and its contents - is identical to
                <link xlink:href="do-wsdl-10-wsdl">do-wsdl-10-wsdl</link>.</para>

        <para>Services may make use of the abstract <link xlink:href="do-wsdl-10-wsdl"
                >do-wsdl-10-wsdl</link> by using it as a template during the creation of a concrete
            DAISY Online Web Service (e.g. by adding to a copy of this document the Service instance
            specific <code>service</code> element and its contents.) </para>
    </appendix>

    <!--
    <appendix xml:id="appendixXSD" conformance="normative">
        <title>WXS Type Definition</title>
        <para>
            <remark role="todo">TODO explain what this is, and add OR change to external file
                reference</remark>
        </para>
        <programlisting><xi:include href="../build/do-types-10.xsd" parse="text"/></programlisting>
    </appendix>
    -->

</book>
