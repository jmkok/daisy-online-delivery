<?xml version="1.0" encoding="UTF-8"?>
<definitions name="DAISYOnlineService" xmlns="http://schemas.xmlsoap.org/wsdl/"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:tns="http://www.daisy.org/ns/daisy-online/" xmlns:db="http://docbook.org/ns/docbook"
	targetNamespace="http://www.daisy.org/ns/daisy-online/"
	xmlns:do="http://www.daisy.org/ns/daisy-online/">

	<documentation>
		This WSDL document and the entities referenced from within it are a normative part
		of the DAISY Online Protocol Specification (http://www.daisy.org/projects/daisy-online-delivery/). 
	
		Version: 20090910 (Second Working Group Draft)
	</documentation>

	<types>

		<xs:schema targetNamespace="http://www.daisy.org/ns/daisy-online/"
			xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
			attributeFormDefault="unqualified"
			xmlns:daisy="http://www.daisy.org/z3986/2005/bookmark/"
			xmlns:pdtb2="http://www.daisy.org/DRM/2005/KeyExchange"
			xmlns:db="http://docbook.org/ns/docbook"
			xmlns:tns="http://www.daisy.org/ns/daisy-online/">

			<xs:include schemaLocation="do-types-10.xsd"/>

			<xs:import namespace="http://www.daisy.org/z3986/2005/bookmark/"
				schemaLocation="bookmark-2005-1.xsd"/>

			<xs:import namespace="http://www.daisy.org/DRM/2005/KeyExchange"
				schemaLocation="http://www.daisy.org/DRM/KeyExchange-2005-1.xsd"/>

			<!-- message types -->

			<xs:element name="logOn">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="username" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">The ID used to access the Service.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>

						<xs:element minOccurs="1" maxOccurs="1" name="password" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">The password associated with the supplied ID.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="logOnResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="logOnResult" type="xs:boolean">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Specifies whether the logon was
										successful.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="logOff">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>
							<db:para role="desc"><db:function>logOff</db:function> takes no parameters.</db:para>
						</xs:documentation>
					</xs:annotation>
				</xs:complexType>
			</xs:element>

			<xs:element name="logOffResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="logOffResult" type="xs:boolean">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Specifies whether the logoff was
										successful.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="setReadingSystemAttributes">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:readingSystemAttributes">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the Reading System attributes.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="setReadingSystemAttributesResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1"
							name="setReadingSystemAttributesResult" type="xs:boolean">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Specifies whether the Service
										successfully received the ReadingSystemAttributes.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="setBookmarks">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="contentID" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">The 
										<db:xref linkend="term_contentIdentifier"/> 
										of the Content item the bookmarks are associated with.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>

						<xs:element minOccurs="1" maxOccurs="1" ref="daisy:bookmarkSet">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the bookmarks to store.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="setBookmarksResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="setBookmarksResult"
							type="xs:boolean">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Specifies whether the Service
										successfully saved the bookmarks.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getBookmarks">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="contentID" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">The 
										<db:xref linkend="term_contentIdentifier"/> 
										of the Content item the bookmarks are being
										retrieved for.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getBookmarksResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="daisy:bookmarkSet">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the bookmarks for the
										Content item.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="issueContent">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="contentID" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">The 
										<db:xref linkend="term_contentIdentifier"/> 
										of the Content item being requested.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="issueContentResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="issueContentResult"
							type="xs:boolean">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Specifies whether the Content item was issued
										successfully.</db:para>
									<db:para>A Service must return <db:literal>true</db:literal> if the Content item
										is already issued when the call is made.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="returnContent">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="contentID" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">The <db:xref
									linkend="term_contentIdentifier"/> of the 
										Content item being returned.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="returnContentResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="returnContentResult"
							type="xs:boolean">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Specifies whether the Content item was returned
										successfully.</db:para>
									<db:para><db:function>returnContent</db:function> must either return <db:literal>true</db:literal>
									or a Fault; it must not return <db:literal>false</db:literal>.</db:para>
									<db:para>A Service must return <db:literal>true</db:literal> if the Content item
										has already been returned prior to this call.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getContentList">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:NMTOKEN">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">The identifier for the content list to
										retrieve.</db:para>
									<db:para role="desc">The following three values are reserved
										and must not be used as identifiers except as
										defined below.</db:para>
									<db:variablelist>
										<db:varlistentry xml:id="contentList_issued">
											<db:term>issued</db:term>
											<db:listitem>
												<db:para role="desc">Refers to a list of Content items
												that the Service currently has recorded as <db:link linkend="term_issue">issued</db:link>
												to the
												User (refer to <db:function><db:xref linkend="op_issueContent"/></db:function>).</db:para>
												<db:para>The list must include all
												Borrowable Content items that have been issued
												regardless of whether they have been downloaded
												(in part or in full) or not.
												The list may include Purchasable Content items
												that have been issued.
												The list excludes
												Content items that have <db:link
												linkend="fundamentals_serviceModels_lender_expiry">expired</db:link>.
												</db:para>
												<db:para>Services that provide Borrowable Content
												must recognize this identifier.</db:para>
											</db:listitem>
										</db:varlistentry>
										<db:varlistentry xml:id="contentList_new">
											<db:term>new</db:term>
											<db:listitem>
												<db:para role="desc">Refers to a list of Content
												items available to issue to a User.</db:para>
												<db:para>The list excludes all Content items that are issued.</db:para>
												<db:para>Services that support the <db:xref
												linkend="fundamentals_content_selection_outofband"
												/> must recognize this identifier.</db:para>
											</db:listitem>
										</db:varlistentry>
										<db:varlistentry xml:id="contentList_expired">
											<db:term>expired</db:term>
											<db:listitem>
												<db:para>Refers to a list of Content items that have been
												<db:link linkend="term_issue">issued</db:link>
												to the User but have
												<db:link linkend="fundamentals_serviceModels_lender_expiry">expired</db:link>.</db:para>
											</db:listitem>
										</db:varlistentry>
									</db:variablelist>
								</xs:documentation>
							</xs:annotation>
						</xs:element>

						<xs:element minOccurs="1" maxOccurs="1" name="firstItem" type="xs:int">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">When retrieving a subset of a
										contentList, contains the first item in the subset to
										retrieve. The first item in the list has the index
											<db:literal>0</db:literal>.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>

						<xs:element minOccurs="1" maxOccurs="1" name="lastItem" type="xs:int">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">When retrieving a subset of a
										contentList, contains the last item in the subset to
										retrieve. The value <db:literal>-1</db:literal> indicates a
										request to retrieve all items from
											<db:parameter>firstItem</db:parameter> to the end of
										the list.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getContentListResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:contentList">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the requested Content list (or a
										segment of the list).</db:para>
									<db:para>The value of the <db:code>id</db:code> attribute of the
										returned <db:type>contentList</db:type> must match the value
										of the <db:parameter>id</db:parameter> parameter passed to
										the <db:function><db:xref linkend="op_getContentList"/></db:function>
										operation.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getServiceAnnouncements">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>
							<db:para role="desc"><db:function>getServiceAnnouncements</db:function> takes no parameters.</db:para>
						</xs:documentation>
					</xs:annotation>
				</xs:complexType>
			</xs:element>

			<xs:element name="getServiceAnnouncementsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:announcements">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the announcements from the
										Service.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="markAnnouncementsAsRead">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:read">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the announcements to mark as read
										(expressed as references to the ID values
										specified in the <db:type><db:xref linkend="tp_announcements"/></db:type>
										type).</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="markAnnouncementsAsReadResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="markAnnouncementsAsReadResult"
							type="xs:boolean">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Specifies whether the
										announcements were successfully marked as read by the
										Service.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getQuestions">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:userResponses">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the response to a
										question, or, as defined in <db:type><db:xref
											linkend="tp_userResponse"/></db:type>, one of the three reserved
										IDs: <db:literal>default</db:literal>,
											<db:literal>search</db:literal> or
											<db:literal>back</db:literal>.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getQuestionsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:questions">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains one or more multiple choice or
										input questions. May also contain a Label or
										contentListRef child elements.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getContentMetadata">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="contentID" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the <db:xref
									linkend="term_contentIdentifier"/> of the Content
										item for which the metadata is being requested.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getContentMetadataResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:contentMetadata">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the metadata for the specified
										Content item.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getContentResources">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="contentID" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the <db:xref
										linkend="term_contentIdentifier"/> of the
										Content item for which the resources list is being requested.
									</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getContentResourcesResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:resources">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the resources list for the specified
										Content item.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getKeyExchangeObject">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="requestedKeyName"
							type="xs:string">
							<xs:annotation>
								<xs:documentation>The identifier of the requested
									key.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getKeyExchangeObjectResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="pdtb2:KeyExchange">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">A <db:xref linkend="bib_pdtb2"/> Key
										Exchange Object, containing the requested key encrypted
										using one of the keys identified in the Reading System's key ring.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<xs:element name="getServiceAttributes">
				<xs:complexType>
					<xs:annotation>
						<xs:documentation>
							<db:para role="desc"><db:function>getServiceAttributes</db:function> takes no
								parameters.</db:para>
						</xs:documentation>
					</xs:annotation>
				</xs:complexType>
			</xs:element>

			<xs:element name="getServiceAttributesResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" ref="do:serviceAttributes">
							<xs:annotation>
								<xs:documentation>
									<db:para role="desc">Contains the attributes of the
										Service.</db:para>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

			<!-- fault types -->

			<xs:element name="internalServerErrorFault" type="tns:internalServerErrorFaultType"/>

			<xs:complexType name="internalServerErrorFaultType">
				<xs:sequence>
					<xs:element minOccurs="0" name="reason" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="invalidOperationFault" type="tns:invalidOperationFaultType"/>

			<xs:complexType name="invalidOperationFaultType">
				<xs:sequence>
					<xs:element minOccurs="0" name="reason" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="invalidParameterFault" type="tns:invalidParameterFaultType"/>

			<xs:complexType name="invalidParameterFaultType">
				<xs:sequence>
					<xs:element minOccurs="0" name="reason" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="operationNotSupportedFault" type="tns:operationNotSupportedFaultType"/>

			<xs:complexType name="operationNotSupportedFaultType">
				<xs:sequence>
					<xs:element minOccurs="0" name="reason" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="noActiveSessionFault" type="tns:noActiveSessionFaultType"/>

			<xs:complexType name="noActiveSessionFaultType">
				<xs:sequence>
					<xs:element minOccurs="0" name="reason" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

		</xs:schema>

	</types>

	<!-- request and response messages for the LogOn operation -->

	<message name="logOn_inputMessage">
		<part name="parameters" element="tns:logOn">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the logon operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="logOn_outputMessage">
		<part name="parameters" element="tns:logOnResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the logOn operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request message for the LogOff operation. -->

	<message name="logOff_inputMessage">
		<part name="parameters" element="tns:logOff">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the logOff operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="logOff_outputMessage">
		<part name="parameters" element="tns:logOffResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the logOff operation.</db:para>
			</documentation>
		</part>
	</message>
	

	<!-- request and response messages for the SetReadingSystemAttributes operation -->

	<message name="setReadingSystemAttributes_inputMessage">
		<part name="parameters" element="tns:setReadingSystemAttributes">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the setReadingSystemAttributes
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="setReadingSystemAttributes_outputMessage">
		<part name="parameters" element="tns:setReadingSystemAttributesResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the setReadingSystemAttributes
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the setBookmarks operation -->

	<message name="setBookmarks_inputMessage">
		<part name="parameters" element="tns:setBookmarks">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the setBookmarks
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="setBookmarks_outputMessage">
		<part name="parameters" element="tns:setBookmarksResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the setBookmarks
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the getBookmarks operation. -->

	<message name="getBookmarks_inputMessage">
		<part name="parameters" element="tns:getBookmarks">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getBookmarks
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getBookmarks_outputMessage">
		<part name="parameters" element="tns:getBookmarksResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getBookmarks
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the issueContent operation -->
	<message name="issueContent_inputMessage">
		<part name="parameters" element="tns:issueContent">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the issueContent
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="issueContent_outputMessage">
		<part name="parameters" element="tns:issueContentResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the issueContent
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the returnContent operation -->

	<message name="returnContent_inputMessage">
		<part name="parameters" element="tns:returnContent">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the returnContent
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="returnContent_outputMessage">
		<part name="parameters" element="tns:returnContentResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the returnContent
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the getContentList operation -->

	<message name="getContentList_inputMessage">
		<part name="parameters" element="tns:getContentList">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getContentList
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getContentList_outputMessage">
		<part name="parameters" element="tns:getContentListResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getContentList
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the getServiceAnnouncements operation -->

	<message name="getServiceAnnouncements_inputMessage">
		<part name="parameters" element="tns:getServiceAnnouncements">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getServiceAnnouncements
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getServiceAnnouncements_outputMessage">
		<part name="parameters" element="tns:getServiceAnnouncementsResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getServiceAnnouncements
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the markAnnouncementsAsRead operation -->

	<message name="markAnnouncementsAsRead_inputMessage">
		<part name="parameters" element="tns:markAnnouncementsAsRead">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the markAnnouncementsAsRead
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="markAnnouncementsAsRead_outputMessage">
		<part name="parameters" element="tns:markAnnouncementsAsReadResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the markAnnouncementsAsRead
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the getQuestions Operation -->

	<message name="getQuestions_inputMessage">
		<part name="parameters" element="tns:getQuestions">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getQuestions
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getQuestions_outputMessage">
		<part name="parameters" element="tns:getQuestionsResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getQuestions
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the getContentMetadata operation -->

	<message name="getContentMetadata_inputMessage">
		<part name="parameters" element="tns:getContentMetadata">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getContentMetadata
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getContentMetadata_outputMessage">
		<part name="parameters" element="tns:getContentMetadataResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getContentMetadata
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the getContentResources operation -->

	<message name="getContentResources_inputMessage">
		<part name="parameters" element="tns:getContentResources">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getContentResources
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getContentResources_outputMessage">
		<part name="parameters" element="tns:getContentResourcesResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getContentResources
					operation.</db:para>
			</documentation>
		</part>
	</message>


	<!-- request and response messages for the getKeyExchangeObject operation -->

	<message name="getKeyExchangeObject_inputMessage">
		<part name="parameters" element="tns:getKeyExchangeObject">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getKeyExchangeObject
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getKeyExchangeObject_outputMessage">
		<part name="parameters" element="tns:getKeyExchangeObjectResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getKeyExchangeObject
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- request and response messages for the getServiceAttributes operation -->

	<message name="getServiceAttributes_inputMessage">
		<part name="parameters" element="tns:getServiceAttributes">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the request message for the getServiceAttributes
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<message name="getServiceAttributes_outputMessage">
		<part name="parameters" element="tns:getServiceAttributesResponse">
			<documentation>
				<db:para role="desc">the element whose structure type represents the content model
					of the soap body in the response message for the getServiceAttributes
					operation.</db:para>
			</documentation>
		</part>
	</message>

	<!-- fault messages -->

	<message name="internalServerErrorFault_message">
		<part name="fault" element="tns:internalServerErrorFault">
			<documentation>
				<db:para role="desc">Condition: an internal server error occurred on the Service and the
					execution of the operation was halted.</db:para>
				<db:para>This Fault is issued when errors occur that are not described by the <db:xref
						linkend="ft_invalidOperationFault"/>, <db:xref
						linkend="ft_invalidParameterFault"/>, <db:xref
						linkend="ft_operationNotSupportedFault"/> and <db:xref
						linkend="ft_noActiveSessionFault"/> Faults. At the event of this Fault being
					issued, Reading Systems may attempt to call the operation that
					failed again.</db:para>
			</documentation>
		</part>
	</message>

	<message name="noActiveSessionFault_message">
		<part name="fault" element="tns:noActiveSessionFault">
			<documentation>
				<db:para role="desc">Condition: the operation is not allowed when there is no active
					session.</db:para>
				<db:para>This Fault is issued on all operation calls except those in the
					operation sequence defined by the <db:xref
						linkend="def_sessionInitializationSequence"/> when a Session has either
					expired or not been successfully initialized.</db:para>
			</documentation>
		</part>
	</message>

	<message name="operationNotSupportedFault_message">
		<part name="fault" element="tns:operationNotSupportedFault">
			<documentation>
				<db:para role="desc">Condition: the operation is not supported by the Service.</db:para>
				<db:para>This Fault is issued when a Reading System calls an <db:link
						linkend="apiReferenceOptional">optional operation</db:link> that the Service
					does not support.</db:para>
			</documentation>
		</part>
	</message>

	<message name="invalidOperationFault_message">
		<part name="fault" element="tns:invalidOperationFault">
			<documentation>
				<db:para role="desc">Condition: the operation is not valid in the current context</db:para>
				<db:para>This Fault is issued when a Reading System during an active Session calls
					an operation at a stage when the call of another operation, or a set of
					other operations, is required.</db:para>
			</documentation>
		</part>
	</message>

	<message name="invalidParameterFault_message">
		<part name="fault" element="tns:invalidParameterFault">
			<documentation>
				<db:para role="desc">Condition: an invalid parameter was passed with the operation
					request.</db:para>
				<db:para>This Fault is issued when a Reading System calls an operation with a parameter
					that the Service does not recognize, allow, or support.
				</db:para>
			</documentation>
		</part>
	</message>


	<portType name="daisy-online">

		<!-- **************************************************** -->
		<!-- *******  operations required for compliance ******** -->
		<!-- **************************************************** -->

		<operation name="logOn">
			<documentation>
				<db:para role="desc">Logs a Reading System on to a Service.</db:para>
			</documentation>
			<input message="tns:logOn_inputMessage"/>
			<output message="tns:logOn_outputMessage"/>
			<fault name="logOn_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="logOn_invalidOperationFault" message="tns:invalidOperationFault_message"/>
		</operation>

		<operation name="logOff">
			<documentation>
				<db:para role="desc">Logs a Reading System off a Service.</db:para>		
				<db:para>A return value of <db:literal>false</db:literal> or an issued Fault both
				indicate that the operation was not successful.</db:para>
			</documentation>
			<input message="tns:logOff_inputMessage"/>
			<output message="tns:logOff_outputMessage"/>
			<fault name="logOff_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="logOff_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>		
			<fault name="logOff_invalidOperationFault" message="tns:invalidOperationFault_message"/>
		</operation>

		<operation name="setReadingSystemAttributes">
			<documentation>
				<db:para role="desc">Sends Reading System properties to a
					Service.</db:para>
				<db:para>A Reading System must call this operation as part of the <db:xref
						linkend="def_sessionInitializationSequence"/>. The operation may be called
					additional times during a Session to record dynamic changes in a Reading
					System's properties.</db:para>
			</documentation>
			<input message="tns:setReadingSystemAttributes_inputMessage"/>
			<output message="tns:setReadingSystemAttributes_outputMessage"/>
			<fault name="setReadingSystemAttributes_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="setReadingSystemAttributes_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="setReadingSystemAttributes_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="setReadingSystemAttributes_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="issueContent">
			<documentation>
				<db:para role="desc">Requests a Service to issue the specified Content item.</db:para>
			</documentation>
			<input message="tns:issueContent_inputMessage"/>
			<output message="tns:issueContent_outputMessage"/>
			<fault name="issueContent_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="issueContent_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="issueContent_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="issueContent_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>



		<operation name="getContentMetadata">
			<documentation>
				<db:para role="desc">Retrieves <db:type><db:xref linkend="tp_contentMetadata"/></db:type> for the
					specified Content item.</db:para>
				<db:para>This operation must be called as part of the 
					<db:xref linkend="def_contentRetrievalSequence"/>.</db:para>
			</documentation>
			<input message="tns:getContentMetadata_inputMessage"/>
			<output message="tns:getContentMetadata_outputMessage"/>
			<fault name="getContentMetadata_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getContentMetadata_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="getContentMetadata_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
			<fault name="getContentMetadata_invalidOperationFault" message="tns:invalidOperationFault_message"/>
		</operation>

		<operation name="getContentResources">
			<documentation>
				<db:para role="desc">Retrieves the <db:type><db:xref linkend="tp_resources"/></db:type> list for the specified
					Content item.</db:para>
				<db:para role="prereq">The Content item must be <db:link linkend="term_issue">issued</db:link>
				before this operation is called.  If not, the Service shall respond with
				an <db:xref linkend="ft_invalidParameterFault" /> Fault.</db:para>
			</documentation>
			<input message="tns:getContentResources_inputMessage"/>
			<output message="tns:getContentResources_outputMessage"/>
			<fault name="getContentResources_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getContentResources_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="getContentResources_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="getContentResources_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>


		<operation name="getServiceAttributes">
			<documentation>
				<db:para role="desc">Retrieves Service properties, including information on which
					optional Operations the Service supports.</db:para>
				<db:para>A Reading System must call this operation as part of the <db:xref
						linkend="def_sessionInitializationSequence"/> and may call the operation
					to retrieve information on possible changes to Service properties at any other time
					during a Session.</db:para>
			</documentation>
			<input message="tns:getServiceAttributes_inputMessage"/>
			<output message="tns:getServiceAttributes_outputMessage"/>
			<fault name="getServiceAttributes_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getServiceAttributes_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="getServiceAttributes_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<!-- ************************************** -->
		<!-- *******  optional operations  ******** -->
		<!-- ************************************** -->

		<operation name="getContentList">
			<documentation>
				<db:para role="desc">Retrieves a list of Content items.</db:para>
				<db:para>The list returned by the Service can be pre-composed, in which case it
					is retrieved by passing one of the three reserved values defined in the
						<db:parameter>id</db:parameter> parameter below. (Refer to <db:xref
						linkend="fundamentals"/>, for information on the contexts in which these reserved
					values can be used.)</db:para>
				<db:para>The list can also be dynamic (e.g., the result of a 
					<db:link linkend="fundamentals_content_selection_browse">dynamic menu search</db:link> 
					operation sequence). In this case, the
						<db:parameter>id</db:parameter> value used to refer to the list is provided
					in the return value of a previous operation. (Refer to the <db:type><db:xref
						linkend="tp_questions"/></db:type> type for more information.) </db:para>
			</documentation>
			<input message="tns:getContentList_inputMessage"/>
			<output message="tns:getContentList_outputMessage"/>
			<fault name="getContentList_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getContentList_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="getContentList_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="getContentList_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="getServiceAnnouncements">
			<documentation>
				<db:para role="desc">Retrieves any announcements from
					the Service that a User has not yet read.</db:para>
			</documentation>
			<input message="tns:getServiceAnnouncements_inputMessage"/>
			<output message="tns:getServiceAnnouncements_outputMessage"/>
			<fault name="getServiceAnnouncements_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getServiceAnnouncements_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="getServiceAnnouncements_operationNotSupportedFault"
				message="tns:operationNotSupportedFault_message"/>
			<fault name="getServiceAnnouncements_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="markAnnouncementsAsRead">
			<documentation>
				<db:para role="desc">Marks the specified announcement(s) as read.</db:para>
				<db:para role="prereq">This operation is only valid if a previous call to <db:function><db:xref
						linkend="op_getServiceAnnouncements"/></db:function> has been made during the
					Session.</db:para>
			</documentation>
			<input message="tns:markAnnouncementsAsRead_inputMessage"/>
			<output message="tns:markAnnouncementsAsRead_outputMessage"/>
			<fault name="markAnnouncementsAsRead_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="markAnnouncementsAsRead_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="markAnnouncementsAsRead_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="markAnnouncementsAsRead_operationNotSupportedFault"
				message="tns:operationNotSupportedFault_message"/>
			<fault name="markAnnouncementsAsRead_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="returnContent">
			<documentation>
				<db:para role="desc">Notifies the Service that the specified Content item has been deleted
					from the Reading System.
				</db:para>
				
				<db:para>The specified Content item is no longer issued to the User 
					after a successful call of this operation. </db:para>

				<db:para> A Reading System must not call this function for a Content item that has
					a <db:code>requiresReturn</db:code> attribute with a value of
					<db:literal>false</db:literal>.</db:para>
				
				<db:para>A Reading System must delete the Content item before calling
						<db:function>returnContent</db:function>. A Reading System must not call
						<db:function>returnContent</db:function> for a Content item that was not
						issued to the User on that Reading System.</db:para>
				<db:note>
					<db:para>This protocol cannot guarantee that a Reading System has actually
						deleted the Content item before calling <db:function>returnContent</db:function>.
						The Service receiving a call to this operation does not constitute
						proof that the Content item has been removed. A DRM solution should be used 
						when Service Providers require a copy prevention mechanism.</db:para>
				</db:note>
			</documentation>
			<input message="tns:returnContent_inputMessage"/>
			<output message="tns:returnContent_outputMessage"/>
			<fault name="returnContent_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="returnContent_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="returnContent_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="returnContent_operationNotSupportedFault"
				message="tns:operationNotSupportedFault_message"/>
			<fault name="returnContent_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="setBookmarks">
			<documentation>
				<db:para role="desc">Requests that a Service store the supplied bookmarks for a 
					Content item.</db:para>
				<db:para>This operation only supports the storage of bookmarks
					for one Content item at a time.</db:para>
			</documentation>
			<input message="tns:setBookmarks_inputMessage"/>
			<output message="tns:setBookmarks_outputMessage"/>
			<fault name="setBookmarks_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="setBookmarks_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="setBookmarks_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="setBookmarks_operationNotSupportedFault"
				message="tns:operationNotSupportedFault_message"/>
			<fault name="setBookmarks_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="getBookmarks">
			<documentation>
				<db:para role="desc">Retrieves the bookmarks for a Content item from a
					Service.</db:para>
			</documentation>
			<input message="tns:getBookmarks_inputMessage"/>
			<output message="tns:getBookmarks_outputMessage"/>
			<fault name="getBookmarks_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getBookmarks_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="getBookmarks_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="getBookmarks_operationNotSupportedFault"
				message="tns:operationNotSupportedFault_message"/>
			<fault name="getBookmarks_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="getQuestions">
			<documentation>
				<db:para role="desc">Retrieves a question from the series of questions that comprise
					the dynamic menu system.</db:para>
			</documentation>
			<input message="tns:getQuestions_inputMessage"/>
			<output message="tns:getQuestions_outputMessage"/>
			<fault name="getQuestions_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getQuestions_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="getQuestions_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="getQuestions_operationNotSupportedFault"
				message="tns:operationNotSupportedFault_message"/>
			<fault name="getQuestions_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

		<operation name="getKeyExchangeObject">
			<documentation>
				<db:para role="desc">Requests a <db:xref linkend="bib_pdtb2"/> Key Exchange Object
					from a <db:xref linkend="term_service"/>.</db:para>
			</documentation>
			<input message="tns:getKeyExchangeObject_inputMessage"/>
			<output message="tns:getKeyExchangeObject_outputMessage"/>
			<fault name="getKeyExchangeObject_internalServerErrorFault"
				message="tns:internalServerErrorFault_message"/>
			<fault name="getKeyExchangeObject_invalidOperationFault"
				message="tns:invalidOperationFault_message"/>
			<fault name="getKeyExchangeObject_invalidParameterFault"
				message="tns:invalidParameterFault_message"/>
			<fault name="getKeyExchangeObject_operationNotSupportedFault"
				message="tns:operationNotSupportedFault_message"/>
			<fault name="getKeyExchangeObject_noActiveSessionFault"
				message="tns:noActiveSessionFault_message"/>
		</operation>

	</portType>

	<!-- the binding element is generated by wsdl-finalize.xsl -->

</definitions>
