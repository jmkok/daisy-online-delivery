#summary A report on the testing of the DAISY Online protocol against the requirements and expectations.
#labels Phase-Requirements,Phase-QA,Report

<wiki:toc max_depth="2" />

= Introduction =

This report summarizes the system testing of the protocol, that is, the demonstration of how well the specification fulfils the requirements and expectations.  The requirements come from the modified RequirementsDocument.

Note that this is not conformance testing.  Some of these test will not be met even by some conformant Reading Systems and Services.  Rather, they are proofs-of-concept, demonstrations that the protocol can support a particular function.  For example, test 14.3 "Pre-requisite book" states:

  Search for the second or third book of a series, where the previous book was never issued. The Service should, in the dynamic menus, inform the user of the previous book.

This only applies to Services that support dynamic menus, searching and have the optional function of tracking a User's previous selections and making suggestions.  Not all Services are expected to do this.

TODO: Some of the entries for !PlexTalk have notes in Japanese.  This should be corrected before the final report.

= Requirements =

== 1. Efficient use of bandwidth ==

*Partially fulfilled*

[RequirementsDocument#Efficient_use_of_bandwidth Requirement]

Content transfer usually takes place over HTTP, which is sufficient for transfer of data over the World Wide Web.  The Service creates minimal overhead.

Transfer of audio from the Reading System to the Service takes place over SOAP without MTOM, which adds roughly 37% more to transmission time.

  # *Download content*: Use a Service to find and download an entire Content item.  Ensure that the Content is downloaded in a reasonable amount of time.
  # *Protocol overhead*: In a typical session, measure the ratio of bytes transferred for messages (i.e., over SOAP) vs. bytes transferred for Content (i.e., over plain HTTP/HTTPS).
  # *Audio response*: Send an audio response to a dynamic menu item that supports it.  Ensure that the audio is uploaded in a reasonable amount of time.

|| Test case || Client || Server || Result || Details ||
|| 1.1 || CNIB || CNIB || *Success* || Transfer of data was at an acceptable rate.  A 45.7 MB book was downloaded in 10 minutes. ||
|| 1.1 || CNIB || Vision Australia || *Success* || Transfer of data was at an acceptable rate.  A 21.4 MB book was downloaded in 4 minutes. ||
|| 1.1 || !HumanWare || CNIB || *Success* || Transfer of data was at an acceptable rate.  A 10 MB book was downloaded in 2:35 minutes. ||
|| 1.1 || !HumanWare || Vision Australia || *Success* || Transfer of data was at an acceptable rate.  A 74 MB book was downloaded in 9:34 minutes. ||
|| 1.2 || CNIB || Vision Australia || *Success* || Issued and downloaded a Content item of approx. 58 MB. SOAP messages were approx. 16 KB, or a 0.03% overhead ratio. ||
|| 1.2 || CNIB || Solutions Radio || *Success* || Issued and downloaded a Content item of approx. 139 MB.  SOAP messages were approx. 51 KB, or a 0.04% overhead ratio. ||
|| 1.2 || !PlexTalk || !PratSam ||  ||  ||
|| 1.2 || !PlexTalk || Solutions Radio ||  ||  ||
|| 1.3 || !HumanWare || Solutions Radio || *Success* || Uploaded 152 KB in 2.4 seconds. ||
|| 1.3 || !HumanWare || Vision Australia ||  ||  ||
|| 1.3 || !PlexTalk || Solutions Radio || *Untested* || オーディオアップデートを試すメニューがありません。 ||
|| 1.3 || !PlexTalk || Vision Australia || *Untested* || Received a nonstandard fault. ||

== 2. Key authorization ==

*Partially fulfilled*

[RequirementsDocument#Key_authorization Requirement]

Authorization occurs by User, not by Reading System; credentials are user names and passwords, not encryption keys. Service Providers intending to authorize Content by individual Reading System will need to use some other mechanism, such as PDTB2.

  # *Connect with authorization*: Initialize a session with a Service using correct user credentials.
  # *Deny incorrect authorization*: Attempt to initialize a session with a Service using a valid user name, but an incorrect password.  The Service must respond `false` to the `logOn` operation, and return a `NoActiveSession` fault to subsequent operation calls.
  # *Allow content download with correct credentials*: Download a resource with basic authentication credentials provided by the Service.
  # *Deny content download with incorrect credentials*: Attempt to download a resource with incorrect basic authentication credentials.  The file server must respond with an HTTP status of "401 Unauthorized".

|| Test case || Client || Server || Result || Details ||
|| 2.1 || CNIB || !PratSam || *Success* || Logged on with username "tsg". ||
|| 2.1 || CNIB || Vision Australia || *Success* || Logged on with username "cnib". ||
|| 2.1 || !HumanWare || !PratSam || *Success* || Session was successfully initialized. ||
|| 2.1 || !HumanWare || Vision Australia || *Success* || Session was successfully initialized. ||
|| 2.2 || CNIB || CNIB || *Success* || Attempted to connect with username "cnib", password "invalid". Service returned the correct responses. ||
|| 2.2 || CNIB || !PratSam || *Success* || Attempted to connect with username "tsg", password "invalid". Service returned the correct responses. ||
|| 2.2 || Solutions Radio || CNIB || *Success* || Service returned the correct responses. ||
|| 2.2 || Solutions Radio || Vision Australia || *Success* || Service returned the correct responses. ||
|| 2.3 || CNIB || CNIB || *Success* || Downloaded "DC00003". ||
|| 2.3 || CNIB || !PratSam || *Success* || Downloaded parts of "pub_2". ||
|| 2.3 || !HumanWare || CNIB || *Success* || Resources were downloaded with basic authentication credentials. ||
|| 2.3 || !HumanWare || !PratSam || *Success* || Resources were downloaded with basic authentication credentials. ||
|| 2.4 || CNIB || !PratSam || *Success* ||  ||
|| 2.4 || CNIB || Solutions Radio ||  ||  ||
|| 2.4 || !HumanWare || !PratSam || *Success* || Service responded 401 when using invalid user name or password ||
|| 2.4 || !HumanWare || Solutions Radio || *Success* || Service responded 401 when using invalid user name or password ||

== 3. Transmit bookmarks ==

*Partially fulfilled*

[RequirementsDocument#Transmit_bookmarks Requirement]

The protocol does not support bookmarks with audio notes.

Note: Storing user-created bookmarks is covered under requirement #13, Bookmark stored on server.

  # *Retrieve a service provider-created bookmark*: Use `getBookmarks` to retrieve a list of predefined bookmarks from a Service.

|| Test case || Client || Server || Result || Details ||
|| 3.1 || !PlexTalk || Solutions Radio || *Failure* || しおりが付いている図書があり取得できるが。しおり系のタグにNamespaceが設定されていない ||
|| 3.1 || !PlexTalk || Vision Australia || *Untested* || あらかじめしおりがつけてあるコンテンツの準備をお願いします。 ||
|| 3.1 || Solutions Radio || Solutions Radio || *Success* ||  ||
|| 3.1 || Solutions Radio || Vision Australia || *Failure* || The requested bookmark is not returned, but another ||

== 4. Return book ==

*Untested*

[RequirementsDocument#Return_book Requirement]

  # *Return a downloaded book*: Issue and download a Borrowable Content item (i.e. one that requires return) then perform the Reading System's return function.  The Service must return `true`.  Verify that the Content's resources have been removed from the Reading System.
  # *Return a streamed book*: Issue a Borrowable Content item and stream some part of it, then perform the Reading System's return function.  The Service must return `true`.  Verify that the Content's resources are not present on the Reading System.

|| Test case || Client || Server || Result || Details ||
|| 4.1 || CNIB || CNIB || *Success* || Deleted and returned "EP00001". ||
|| 4.1 || CNIB || Vision Australia || *Success* || Deleted and returned "Book1". ||
|| 4.1 || !PlexTalk || CNIB || *Failure* || Unable to download the Content. ||
|| 4.1 || !PlexTalk || Vision Australia || *Failure* || Unable to download the Content. ||
|| 4.2 || !PlexTalk || CNIB || *Partial success* || Unable to stream the Content. Return was successful. ||
|| 4.2 || !PlexTalk || Solutions Radio || *Partial success* || Unable to stream the Content. Return was successful. ||
|| 4.2 || Solutions Radio || CNIB || *Success* || issueContent + Stream + returnContent tested ||
|| 4.2 || Solutions Radio || Solutions Radio || *Success* || issueContent + Stream + returnContent tested ||

== 5. Transmit capabilities ==

*Untested*

[RequirementsDocument#Transmit_capabilities Requirement]

  # *Set Reading System attributes*: Initialize a session with a Service.  Verify that the Reading System's attributes were sent to the Service.
  # *Adapt Content to the Reading System's capabilities*: Initialize a session with a Service that provides different Content based on the capabilities of the Reading System.  Ensure that the Content and resources offered by the Service are only in the formats given in the `readingSystemAttributes` provided to the Service.
  # *Negotiate audio labels*: Initialize a session with a Service that supports text-only and text+audio labels.  Set `readingSystemAttributes/config/requiresAudioLabels` to `true` when calling `setReadingSystemAttributes`.  Ensure that all `label`s have `audio` components.
  # *Negotiate numeric input*: Initialize a session with a Service that has implemented both numeric and alphanumeric `inputQuestion`s.  Set `readingSystemAttributes/config/supportedInputTypes` to to have one `input` element with a `type` attribute of `TEXT_NUMERIC` when calling `setReadingSystemAttributes`.  Ensure that all `inputQuestion`s allow `TEXT_NUMERIC` input.

|| Test case || Client || Server || Result || Details ||
|| 5.1 || !HumanWare || CNIB || *Success* || Session was successfully initialized and Reading System attributes were received by the service. ||
|| 5.1 || !HumanWare || Vision Australia || *Success* || Session was successfully initialized and Reading System attributes were received by the service. ||
|| 5.1 || !PlexTalk || CNIB || *Success* ||  ||
|| 5.1 || !PlexTalk || Vision Australia || *Success* ||  ||
|| 5.2 || !HumanWare || !PratSam || *Success* || Session was successfully initialized and Service provided only supported format content. (Note: the test was completed without PDTB2 support because the Service is treating PDTB2 content as a format. This is not the case and should be address.) ||
|| 5.2 || !PlexTalk || !PratSam ||  ||  ||
|| 5.3 || !PlexTalk || Solutions Radio || *Success* || Received audio labels for the "new" content list, the service announcements and the "default" menu. ||
|| 5.3 || Solutions Radio || Solutions Radio ||  ||  ||
|| 5.4 || !PlexTalk || Vision Australia || *Success* || Input question allowed both numeric and alphanumeric input. ||

== 6. Universal protocol ==

*Untested*

[RequirementsDocument#Universal_protocol Requirement]

  # *Full session*: Perform a full session, from `logOn` to `logOff`.  (This test should be performed with as many combinations of clients and servers as possible.)

|| Test case || Client || Server || Result || Details ||
|| 6.1 || CNIB || CNIB || *Success* || Operated in automatic mode.  Initialized the session.  Two issued books, "ET00003" and "us-nls-db62465", selected beforehand, were returned.  One book, "ET00004", showed up in the "new" content list; it was issued and downloaded.  The other content was up-to-date, so the Reading System logged off. ||
|| 6.1 || CNIB || !PratSam || *Success* || Operated in automatic mode.  Initialized the session.  No books were returned.  No books showed up in the "new" content list.  One issued book, "pub_2" had been deleted but not returned, so it was re-downloaded.  The Reading System logged off. ||
|| 6.1 || CNIB || Solutions Radio || *Success* || Operated in automatic mode.  Initialized the session.  No books were returned.  Several books showed up in the "new" content list; the first three were issued and downloaded.  The other content was up-to-date, so the Reading System logged off. ||
|| 6.1 || CNIB || Vision Australia || *Success* || Operated in automatic mode.  Initialized the session.  One book was on the "expired" list, "Book1", and was returned.  Several books showed up in the "new" content list; the first three were issued and downloaded.  There was no other content, so the Reading System logged off. ||
|| 6.1 || !HumanWare || CNIB || *Success* || Session initialized. Content issued, downloaded and returned. ||
|| 6.1 || !HumanWare || !PratSam ||  ||  ||
|| 6.1 || !HumanWare || Solutions Radio ||  ||  ||
|| 6.1 || !HumanWare || Vision Australia ||  ||  ||
|| 6.1 || !PlexTalk || CNIB || *Failure* || `<`確認内容`>` 以下のAPIを実記を使用して確認 logon getServiceAttributes setReadingSystemAttributes getContentList(new) getContentMetaData issueContent getContentResources getContentList(issued) returnContent getServiceAnnouncement MarkServiceAnnouncementAsRead `<`結果`>` ・getQuestions は未サポートのため、未確認。 ・お知らせが存在しないため、getServiceAnnouncement、MarkServiceAnnouncementAsRead は未確認。 ・getContentMetadataがNG。ID = DC00002で確認。 -`>`error(25)`<`gSOAP`>`。 ||
|| 6.1 || !PlexTalk || !PratSam || *Success* || `<`確認内容`>` 以下のAPIを実機を使用して確認 logon getServiceAttributes setReadingSystemAttributes getQuestions(serach) getContentList(new) getContentMetaData issueContent getContentResources getContentList(issued) returnContent getServiceAnnouncement MarkServiceAnnouncementAsRead logoff `<`結果`>` PCでの実行結果の通り、検索ワード""A light Man""で戻りID""new""だったため、getContentList(new)を実行した。 コンテンツは ID = 2 で確認し、再生できた。 AnnnouncementはID = 2で確認し、問題なし。" ||
|| 6.1 || !PlexTalk || Solutions Radio || *Failure* || `<`確認内容`>` 以下のAPIを実機を使用して確認 logon getServiceAttributes setReadingSystemAttributes getQuestions(default) getContentList(new) getContentMetaData issueContent getContentResources getContentList(issued) returnContent getServiceAnnouncement MarkServiceAnnouncementAsRead logoff `<`結果`>` ・getQuestions(default)でIDが返らない為、確認出来ず。 ・getContentMetadataがNG。ID de1ce83964e001c1ff2ff28e286b511accf13132 で確認。 -`>`error(12)`<`gSOAP`>` -`>`error(615)`<`no contentMetaData`>` ||
|| 6.1 || !PlexTalk || Vision Australia || *Success* || `<`確認内容`>` 以下のAPIを実機を使用して確認 logon getServiceAttributes setReadingSystemAttributes getQuestions(default) getQuestions(search) getContentList(new) getContentMetaData issueContent getContentResources getContentList(issued) returnContent getServiceAnnouncement MarkServiceAnnouncementAsRead logoff `<`結果`>` コンテンツは ID =Magazine2 で確認し、問題なし。Announcementは  ID = downtime で確認し、問題なし。||
|| 6.1 || Solutions Radio || CNIB || *Partial Success* || No problems detected using basic tests. Announcements, bookmarks, menus and kxo not implemented ||
|| 6.1 || Solutions Radio || !PratSam || *Success* || No problems detected using basic tests ||
|| 6.1 || Solutions Radio || Solutions Radio || *Success* || No problems detected using basic tests ||
|| 6.1 || Solutions Radio || Vision Australia || *Success* || No problems detected using basic tests. Kxo not implemented. Service is a bit slow. ||

== 7. Player stores contact information ==

*N/A*

[RequirementsDocument#Player_stores_contact_information Requirement]

The requirement states that the Reading System must store the Service's contact information.  This is not a requirement as much as it is a declaration that Service Discovery is out of scope.

== 8. Content at different location ==

*Untested*

[RequirementsDocument#Content_at_different_location Requirement]

  # *Public remote content*: Issue a Content item which is hosted on a public server that is not affiliated with the Service Provider and does not require authentication.  Download the Content.
  # *Private remote content*: Issue a Content item which is hosted on a public server that is not  at the same host as the Service and requires basic authentication.  Download the Content.

|| Test case || Client || Server || Result || Details ||
|| 8.1 || CNIB || !PratSam || *Not implemented* || Find someone to do this. ||
|| 8.1 || CNIB || Solutions Radio ||  ||  ||
|| 8.1 || Solutions Radio || !PratSam || *Untested* || All content requires authorization ||
|| 8.1 || Solutions Radio || Solutions Radio || *Success* || resource id a7bbdb68f5cdfe2be46cf09bdd6f200c641dcb27 ||
|| 8.2 || CNIB || CNIB || *Success* || Retrieved "ext1", a web page hosted at Cornell University with basic authenticaion. ||
|| 8.2 || CNIB || Solutions Radio ||  ||  ||
|| 8.2 || !HumanWare || CNIB || *Success* || Content issued and downloaded. ||
|| 8.2 || !HumanWare || Solutions Radio || *Success* || Content issued and downloaded. ||

== 9. Time interrogation ==

*Partially fulfilled*

[RequirementsDocument#Time_interrogation Requirement]

The ability for Reading Systems to query the Service for the current time was not included in the protocol.  The protocol can provide a due date for Content, and can provide a list of expired Content.

  # *Due date*: Retrieve a Content item with a "return by" attribute.  Ensure the date is rendered to the User.
  # *Expired content*: Request the Service to cause some borrowed Content to expire.  Ensure that it is present on the `expired` Content list.

|| Test case || Client || Server || Result || Details ||
|| 9.1 || CNIB || Solutions Radio || *Success* || Got the resources for "2bdb2598e04fc91aa132b003d4e9045869cbc02b", which was due back at Tue Mar 30 16:40:16 2010. ||
|| 9.1 || CNIB || Vision Australia || *Success* || Issued "Book1".  Due date is Sun Jan 17 22:20:17 2010. ||
|| 9.1 || Solutions Radio || Solutions Radio || *Success* || returnBy present and correct format ||
|| 9.1 || Solutions Radio || Vision Australia || *Success* || returnBy present and correct format ||
|| 9.2 || CNIB || !PratSam || *Success* || "expired" list had two items: "pub_1" and "pub_4".  Returned "pub_1" and it was removed from the list. ||
|| 9.2 || CNIB || Solutions Radio || *Success* || Four items had expired, one of which was downloaded.  All four items were returned, and they went off the "expired" list. ||
|| 9.2 || !PlexTalk || !PratSam || *Untested* || 期限切れ図書を準備してください ||
|| 9.2 || !PlexTalk || Solutions Radio || *Untested* || 期限切れ図書が存在しないので確認できません ||

== 10. Download and streaming ==

*Untested*

[RequirementsDocument#Download_and_streaming Requirement]

  # *Download content*: Issue and download a Content item.
  # *Stream content*: Issue a Content item and stream some part of it.

|| Test case || Client || Server || Result || Details ||
|| 10.1 || CNIB || CNIB || *Success* || Issued and downloaded "DC00003", a DAISY book. ||
|| 10.1 || CNIB || Solutions Radio || *Success* || Issued and downloaded "e3ccc1534fdff5b6b5a9001353cb40da7bbe0c2c", a DAISY book. ||
|| 10.1 || !PlexTalk || CNIB ||  ||  ||
|| 10.1 || !PlexTalk || Solutions Radio || *Failure* || 要DL機能 ||
|| 10.2 || !PlexTalk || CNIB || *Failure* || 再生できるコンテンツが準備されていない ||
|| 10.2 || !PlexTalk || Vision Australia || *Success* || `<`確認内容`>` 6.2の確認時に、issuedしたID =Magazine2 でストリーミング再生できる事を確認。 ||
|| 10.2 || Solutions Radio || CNIB || *Success* || Files are streamable ||
|| 10.2 || Solutions Radio || Vision Australia || *Failure* || Files are not streamable (range headers are incorrect) ||

== 11. Key delivery ==

*Untested*

[RequirementsDocument#Key_delivery Requirement]

  # *Identify protected Content*: Find a Protected DTB on the Service.  Get the DTB's metadata.  There must be a meta element with a name attribute of "`pdtb2:specVersion`" and a content attribute of "`2005-1`".
  # *Get a key*: Issue and download a Protected DTB.  Request a Key Exchange Object (KXO) for the decryption key from the Service using `getKeyExchangeObject`.  Render the DTB.
  # *Deny a key*: Issue and download a Protected DTB.  Request a KXO for the decryption key from the Service using `getKeyExchangeObject`, but do not provide an authorized key in the `keyRing` element of the `readingSystemAttributes`.  The Service must reply with an `invalidParameter` fault.

|| Test case || Client || Server || Result || Details ||
|| 11.1 || CNIB || !PratSam || *Success* || Got the metadata for "pub_6", which was listed as PDTB2-protected. ||
|| 11.1 || CNIB || Solutions Radio ||  ||  ||
|| 11.1 || !HumanWare || !PratSam || *Success* || Protected content found. ||
|| 11.1 || !HumanWare || Solutions Radio ||  ||  ||
|| 11.2 || !HumanWare || !PratSam ||  ||  ||
|| 11.2 || !HumanWare || Solutions Radio ||  ||  ||
|| 11.2 || !PlexTalk || !PratSam ||  ||  ||
|| 11.2 || !PlexTalk || Solutions Radio || *Failure* || 要DL機能 ||
|| 11.3 || !HumanWare || !PratSam || *Success* || Protected content issued and downloaded. Service returned invalidParameter fault at operation getKeyExchangeObject (using empty key ring) ||
|| 11.3 || !HumanWare || Solutions Radio ||  ||  ||
|| 11.3 || Solutions Radio || !PratSam ||  ||  ||
|| 11.3 || Solutions Radio || Solutions Radio ||  ||  ||

== 12. Same book, different player ==

*Untested*

[RequirementsDocument#Same_book,_different_player Requirement]

  # *Multiple downloads*: Issue and download a Content item from a Service that allows multiple downloads of the same Content.  Download the same Content item onto another Reading System.
  # *Pick up where you left off*: Issue and download a Content item.  Render the Content up to some point, create a bookmark there and transmit it to the Service.  Return the Content item.  Download the same Content item onto another Reading System.  Get the bookmarks for the Content item.  Start rendering the Content at the point where the bookmark was set earlier.

|| Test case || Client || Server || Result || Details ||
|| 12.1 || CNIB || !PratSam || *Success* || Downloaded parts of "pub_2" to home and work computers. ||
|| 12.1 || CNIB || Vision Australia || *Success* || Downloaded "Book1" to work and home computers. ||
|| 12.1 || Solutions Radio || !PratSam || *Success* ||  ||
|| 12.1 || Solutions Radio || Vision Australia || *Success* ||  ||
|| 12.2 || Solutions Radio || !PratSam || *Success* || Able to continue after logOff (bookmarks verified) ||
|| 12.2 || Solutions Radio || Vision Australia || *Failure* || see: 10.2 and 13.1 ||

== 13. Bookmark stored on server ==

*Partially fulfilled*

[RequirementsDocument#Bookmark_stored_on_server Requirement]

The protocol does not support bookmarks with audio notes.

  # *Store and retrieve a user-created bookmark*: Create a bookmark for a Content item.  Use `setBookmarks` to transmit the bookmark to a Service.  Use `getBookmarks` to retrieve the bookmark from the Service.

|| Test case || Client || Server || Result || Details ||
|| 13.1 || Solutions Radio || Solutions Radio || *Success* ||  ||
|| 13.1 || Solutions Radio || Vision Australia || *Failure* || The bookmark returned is not the one stored (different uid) ||

== 14. Issue content ==

*Untested*

[RequirementsDocument#Issue_content Requirement]

  # *Issue a book*: Request a Content item from a Service using `issueContent`.  The Service must return `true`.  Get the list of resources using `getContentResources`.
  # *Deny a book*: Request a Content item from a Service using `issueContent`.  The Service must return `false`.  Try to get the list of resources using `getContentResources`.  The Service must return an `invalidParameter` fault.
  # *Pre-requisite book*: Search for the second or third book of a series, where the previous book was never issued.  The Service should, in the dynamic menus, inform the user of the previous book.

|| Test case || Client || Server || Result || Details ||
|| 14.1 || !HumanWare || Solutions Radio || *Success* || issueContent returned true and the list of resources was retrieved. ||
|| 14.1 || !HumanWare || Vision Australia || *Success* || issueContent returned true and the list of resources was retrieved. ||
|| 14.1 || !PlexTalk || Solutions Radio || *Success* ||  ||
|| 14.1 || !PlexTalk || Vision Australia || *Success* ||  ||
|| 14.2 || CNIB || CNIB || *Success* || Tried to issue and download "DC00001" but was not allowed.  `getContentResources` threw a fault. ||
|| 14.2 || CNIB || !PratSam || *Success* || Tried to issue "pub_1" after returning, and was denied. `getContentResources` threw a fault. ||
|| 14.2 || Solutions Radio || CNIB || *Success* ||  ||
|| 14.2 || Solutions Radio || !PratSam || *Partial Success* || issueContent threw an invalidParameterFault instead of a false (as specified above) ||
|| 14.3 || !HumanWare || Solutions Radio ||  ||  ||
|| 14.3 || Solutions Radio || Solutions Radio || *Success* || getQuestions with questionID "daisy-test.1922" and value "goblet" returns a list of Harry Potter books ||

== 15. Audio and text annotation ==

*Untested*

[RequirementsDocument#Audio_and_text_annotation Requirement]

  # *Annotated Content list*: Retrieve a Content list with several items from a Service using `getContentList`.  Each item must have a label with both text and audio.

|| Test case || Client || Server || Result || Details ||
|| 15.1 || !HumanWare || !PratSam || *Success* || All items have audio and text in there label. ||
|| 15.1 || !HumanWare || Solutions Radio || *Success* || All items have audio and text in there label ||
|| 15.1 || Solutions Radio || !PratSam || *Success* || All items have audio and text in there label ||
|| 15.1 || Solutions Radio || Solutions Radio || *Success* || All items have audio and text in there label ||

== 16. Stop and resume download ==

*Untested*

[RequirementsDocument#Stop_and_resume_download Requirement]

  # *Stop and resume*: Issue a Content item from a Service and get its resource list.  Download part of one file, then stop.  Drop the HTTP connection, then reconnect.  Resume the download, using the HTTP Range header to download only the remaining part of the file.  Download the same file in its entirety and verify that they match.

|| Test case || Client || Server || Result || Details ||
|| 16.1 || CNIB || CNIB || *Success* || Downloaded 200 bytes of "bagw0014.mp3" from "DC00003". Resumed download and completed. ||
|| 16.1 || CNIB || Vision Australia || *Failure* || Incorrect range sent from server. ||
|| 16.1 || !PlexTalk || CNIB || *Failure* || 要DL機能 ||
|| 16.1 || !PlexTalk || Vision Australia || *Failure* || 要DL機能 ||

== 17. Dynamic menus ==

*Untested*

[RequirementsDocument#Dynamic_menus Requirement]

  # *Search for content*: Use the dynamic menus to search for a Content item.
  # *Browse for content*: Use the dynamic menus to browse the Service's collection by categories provided by the Service.
  # *Survey*: Use the dynamic menus to answer a survey form provided by the Service.

|| Test case || Client || Server || Result || Details ||
|| 17.1 || !HumanWare || Vision Australia || *Failure* || FaultException: Error in deserializing body of request message for operation 'getContentList' (id=1100). ||
|| 17.1 || !PlexTalk || Vision Australia || *Success* || `<`確認内容`>` getQuestion時に決め打ちで「J.K.Rowling」を入力して実行し、以下のデバッグ文が表示される事。 `[`getQuestions`]` ID = q2-1, Value = J.K.Rowling->success (id= 1100) ||
|| 17.2 || !HumanWare || Solutions Radio || *Success* || Content selected and downloaded from dynamic menus. ||
|| 17.2 || !PlexTalk || Solutions Radio || *Failure* || getQuestions(default)で得られた `[`6`]`Magazines and Newspapers(id = rnib.918) を選択して決定すると、 `[`getQuestions`]` ID = , Value = rnib.918->error(12)`<`gSOAP`>` となって実行に失敗する。 ||
|| 17.3 || !HumanWare || !PratSam || *Success* || Successfully answered a survey. ||
|| 17.3 || !HumanWare || Vision Australia || *Failure* || ProtocolException: The remote server returned an unexpected response: (400) Bad Request. ||
|| 17.3 || !PlexTalk || !PratSam || *Success* ||  ||
|| 17.3 || !PlexTalk || Vision Australia || *Failure* || internalServerErrorになる。テキストや数字で答えるsurveyが無いので他は確認していません。 ||

== 18. Noninteractive session ==

*Untested*

[RequirementsDocument#Noninteractive_session Requirement]

  # *Synchronize downloaded content*: Verify the following can be done as a single Reading System function without user interaction between steps:
    * Return a list of Content items selected by the User.
    * Return the Content items in the "expired" Content list.
    * Issue and download all the items in the "new" Content list.
    * Download all Content in the "issued" Content list that is not already on the Reading System.
  # *Synchronize streaming content*: Verify the following can be done as a single Reading System function without user interaction between steps:
    * Return a list of Content items selected by the User.
    * Return the Content items in the "expired" Content list.
    * Issue all the items in the "new" Content list.

|| Test case || Client || Server || Result || Details ||
|| 18.1 || !PlexTalk || !PratSam || *Failure* || 要DL機能 ||
|| 18.1 || !PlexTalk || Vision Australia || *Failure* || 要DL機能 ||
|| 18.1 || Solutions Radio || !PratSam || *Partial Success* || missing lastModifiedDate field which is needed for synchronization ||
|| 18.1 || Solutions Radio || Vision Australia || *Success* ||  ||
|| 18.2 || !HumanWare || CNIB || *Success* || Returned user selected content. Returned expired content. Issued all new content. ||
|| 18.2 || !HumanWare || Solutions Radio || *Success* || Returned user selected content. Returned expired content. Issued all new content. ||
|| 18.2 || Solutions Radio || CNIB || *Success* || note: missing lastModifiedDate (so test 18.1 would fail)  ||
|| 18.2 || Solutions Radio || Solutions Radio || *Success* ||  ||

== 19. Prioritize order of files ==

*Untested*

[RequirementsDocument#Prioritize_order_of_files Requirement]

  # *Play a book while downloading*: Issue a DAISY 2.02 or Z39.86 book that includes audio from the Service.  Identify and download the XML files, then identify and download the audio in play order.  Begin playback of audio before it has fully downloaded.

|| Test case || Client || Server || Result || Details ||
|| 19.1 || Solutions Radio || CNIB ||  ||  ||
|| 19.1 || Solutions Radio || !PratSam || *Success* || Content was correctly available for this purpose (pub_6) ||

== 20. Interact with content ==

*Untested*

[RequirementsDocument#Interact_with_content Requirement]

Note that actually interacting with the Content without downloading all of its resources is covered under 10.2 Stream content.  The user story "Review content before selection" is tested here.

  # *Sample content*: Download the sample of a Content item without issuing the Content.

|| Test case || Client || Server || Result || Details ||
|| 20.1 || CNIB || !PratSam || *Success* || Sample for "pub_3", "sam_3" was downloaded. ||
|| 20.1 || CNIB || Solutions Radio ||  ||  ||
|| 20.1 || Solutions Radio || !PratSam ||  ||  ||
|| 20.1 || Solutions Radio || Solutions Radio ||  ||  ||

== 21. Report firmware version ==

*Untested*

[RequirementsDocument#Report_firmware_version Requirement]

  # *Report firmware version*: Initialize a session with a Service.  Verify that the Reading System's firmware version was sent to the Service.  (Note: this is a subset of test 5.1 Set Reading System attributes.)

|| Test case || Client || Server || Result || Details ||
|| 21.1 || CNIB || CNIB || *Success* ||  ||
|| 21.1 || CNIB || Vision Australia ||  ||  ||
|| 21.1 || !PlexTalk || CNIB || *Success* || `<`確認内容`>` デバッグ文に以下の表示がされる事 setReadingSystemAttributes]->success(0) ||
|| 21.1 || !PlexTalk || Vision Australia || *Success* || `<`確認内容`>` デバッグ文に以下の表示がされる事 setReadingSystemAttributes]->success(0) ||

== 22. Report download activity ==

*Not fulfilled*

[RequirementsDocument#Report_download_activity Requirement]

The capability for a Reading System to report its own download activity to the Service was not included in the protocol.  Service Providers may track this information for local Content by monitoring their own file servers, and may need to require Service Delegates to report download activity.

== 23. Report player errors ==

*Not fulfilled*

[RequirementsDocument#Report_player_errors Requirement]

The capability for a Reading System to report errors to the Service was not included in the protocol.

== 24. Report which server is in control ==

*Not fulfilled*

[RequirementsDocument#Report_which_server_is_in_control Requirement]

The capability to report which server is in control was not included in the protocol.

== 25. Protect user privacy ==

*Untested*

[RequirementsDocument#Protect_user_privacy Requirement]

  # *Invalidate session IDs on logOff*: Initialize a session, then log off.  Call some operations (other than `logOn`); the Service must respond with a `NoActiveSession` fault.
  # *Secure Service*: Initialize a session with a Service over HTTPS.
  # *Secure Content*: Retrieve Content resources over HTTPS.

|| Test case || Client || Server || Result || Details ||
|| 25.1 || CNIB || CNIB || *Success* || Called `getServiceAttributes` after logOff and got a `noActiveSession` fault. ||
|| 25.1 || CNIB || !PratSam || *Success* || Called `getServiceAttributes` after logOff and got a `noActiveSession` fault. ||
|| 25.1 || !PlexTalk || CNIB || *Success* ||  ||
|| 25.1 || !PlexTalk || !PratSam || *Success* ||  ||
|| 25.2 || CNIB || CNIB || *Success*  || Session was successfully initialized. ||
|| 25.2 || CNIB || !PratSam || *Success*  || Session was successfully initialized. ||
|| 25.2 || !HumanWare || CNIB || *Success*  || Session was successfully initialized. ||
|| 25.2 || !HumanWare || !PratSam || *Success*  || Session was successfully initialized. ||
|| 25.3 || CNIB || CNIB || *Success* || Downloaded "DC00003" over HTTPS. ||
|| 25.3 || CNIB || !PratSam || *Success* || Downloaded "pub_2" over HTTPS. ||
|| 25.3 || !PlexTalk || CNIB || *Success* ||  ||
|| 25.3 || !PlexTalk || !PratSam || *Failure* || Service was not set up with HTTPS access. ||

== 26. Localized, plain language error messages ==

*Untested*

[RequirementsDocument#Localized,_plain_language_error_messages Requirement]

  # *Localized error messages*: Deliberately cause a fault (such as trying to get resources for a Content item that is not issued).  Ensure that the error rendered by the Reading System is localized to the User's language and is plainly explained.  (Note: This test should be repeated by causing the same fault, but with different localizations.)

|| Test case || Client || Server || Result || Details ||
|| 26.1 || !PlexTalk || CNIB ||  ||  ||
|| 26.1 || !PlexTalk || !PratSam ||  ||  ||
|| 26.1 || Solutions Radio || CNIB || *Success* || Fault is rendered to the user in its language (RS uses its own text and audio) ||
|| 26.1 || Solutions Radio || !PratSam || *Success* || Fault is rendered to the user in its language (RS uses its own text and audio) ||

= Expectations =

== 27. Audio feedback ==

*Untested*

[RequirementsDocument#Requires_some_player_functionality Requirement] (never formally moved back in scope)

Sending audio from the Reading System to the Service was originally in scope, then declared out of scope, then was brought back into the specification.

  # *Audio feedback*: Transmit audio as a response to a dynamic menu item that accepts it.  Verify that the audio was received by the Service.

|| Test case || Client || Server || Result || Details ||
|| 27.1 || !HumanWare || !PratSam || *Success* || Audio data was succesffily uploaded (76 KB in 2 secondes). ||
|| 27.1 || !HumanWare || Vision Australia || *Failure* || ProtocolException: The remote server returned an unexpected response: (400) Bad Request. ||

== 28. Download tracking ==

*Untested*

Although reporting download activity is not part of the protocol, certain organizations still need to track it.  This can usually be done on the file server, using standard logging tools.

  # *Track downloads*: Connect to a Service, then issue and download a Content item.  Verify that file downloads were logged by the Service Provider.

|| Test case || Client || Server || Result || Details ||
|| 28.1 || !HumanWare || Solutions Radio || *Success* || Content was downloaded and logged by the service. ||
|| 28.1 || !HumanWare || Vision Australia ||  ||  ||
|| 28.1 || Solutions Radio || Solutions Radio || *Success* || Downloads are logged by the webserver ||
|| 28.1 || Solutions Radio || Vision Australia ||  || Kenny: do you have any logs for IP 213.193.238.109 ? ||

== 29. Service announcements ==

*Untested*

The ability to retrieve short announcements for such things as service interruptions and overdue reminders was dropped from the formal requirements, but is still part of the specification.

  # *Get announcements*: Connect to a Service, then get a list of announcements using the `getServiceAnnouncements` operation and render them.
  # *Mark as read*: Call the `markAnnouncementsAsRead` operation with the IDs of active announcements.  Call the `getServiceAnnouncements` operation and ensure that the Service has removed them from the list.

|| Test case || Client || Server || Result || Details ||
|| 29.1 || !HumanWare || !PratSam || *Success* || Announcements were successfully retrieved and rendered. ||
|| 29.1 || !HumanWare || Vision Australia || *Success* || Announcements were successfully retrieved and rendered. ||
|| 29.1 || Solutions Radio || !PratSam || *Success* || Announcements were successfully retrieved and rendered. ||
|| 29.1 || Solutions Radio || Vision Australia || *Success* || Announcements were successfully retrieved and rendered. ||
|| 29.2 || !HumanWare || !PratSam || *Success* || First announcement was marked as read and removed from the announcements list. ||
|| 29.2 || !HumanWare || Vision Australia || *Success* || First announcement was marked as read and removed from the announcements list. ||
|| 29.2 || Solutions Radio || !PratSam || *Success* || Announcements were correctly marked as read and removed from the list ||
|| 29.2 || Solutions Radio || Vision Australia || *Success* || Announcements were correctly marked as read and removed from the list ||

== 30. Internationalization ==

*Untested*

This expands on requirement 26, "Localized, plain language error messages".

  # *Localized announcements*: Connect to a multilingual Service.  Specify in `readingSystemAttributes/config/preferredUILanguage` one of the languages supported by the Service.  Retrieve announcements with `getServiceAnnouncements`.  Check that all `label`s have the same language in their `xml:lang` attributes and that the text and audio are in that language.
  # *Localized menus*: Connect to a multilingual Service.  Specify in `readingSystemAttributes/config/preferredUILanguage` one of the languages supported by the Service.  Browse the menu structure using `getQuestions`.  Check that all `label`s have the same language in their `xml:lang` attributes and that the text and audio are in that language.

|| Test case || Client || Server || Result || Details ||
|| 30.1 || CNIB || !PratSam || *Success* || Announcements retrieved both in English and Finnish ||
|| 30.1 || !PlexTalk || !PratSam || *Success* || Finnish language requested.  Announcement came back in Finnish. ||
|| 30.2 || !PlexTalk || !PratSam || *Success* || Finnish language requested.  Menu came back in Finnish. ||
|| 30.2 || Solutions Radio || !PratSam || *Success* || Default menu available in English and Finnish ||

= Conclusion =

Of the 26 in-scope requirements, X were fulfilled and Y were partially fulfilled.  Z requirements were left unfulfilled, largely due to time constraints.